{"version":3,"sources":["Select2FieldsSetup.js","P4FieldsSetup.js","WPShortcakeHooksSetup.js","ArticlesBlock.js","CarouselHeaderBlock.js","ColumnsBlock.js","CookiesBlock.js","GalleryBlock.js","NewCoversBlock.js","SocialMediaBlock.js","SubmenuBlock.js","TakeActionBoxoutBlock.js","blocks-admin.js"],"names":["Select2FieldsSetup","sui","views","editAttributeSelect2Field","prototype","preselect","$field","_preselected","String","this","getValue","length","request","include","shortcode","get","attr","model","ajaxData","action","$","ajaxurl","extend","response","_","each","data","items","item","id","text","prop","appendTo","render","self","defaults","multiple","arg","set","toJSON","cid","$el","html","template","find","selector","undefined","requests","Array","isArray","push","select2_options","default_options","dropdownParent","allowClear","ajax","url","dataType","delay","params","type","val","s","term","page","processResults","success","results","pagination","more","items_per_page","found_items","cache","escapeMarkup","markup","minimumInputLength","templateResult","templateSelection","soptions","Object","assign","that","defer","shortcodeUIData","select2_handle","sortable","P4FieldsSetup","wp","shortcodeUIFieldData","p4_select","encode","view","p4_checkbox","p4_radio","addTags","parent","before","shortcake","hooks","addAction","WPShortcakeHooksSetup","p4BlocksUI","me","attach_hooks","hooks_defined","blocks","type_of_cover_change_hook","tags_change_hook","post_types_change_hook","posts_select_change_hook","page_types_change_hook","read_more_change_hook","embed_type_change_hook","gallery_image_change_hook","edit_custom_field_hook","initialize_fields","shortcode_tag","render_new","block_name","replace","includes","$block_div","addClass","prev","prepend","animate","opacity","Promise","all","then","removeClass","remove","unset","initialize_view_fields","render_edit","ArticlesBlock","posts_value","tags","trigger","changed","collection","find_view","value","test","encodeURI","posts","post_types","CarouselHeaderBlock","setDefaults","toggle_subheaders","set_maxlength","off","on","selected_block_style","closest","toggle","add_maxlength_with_counter","element","maxLength","next","insertAfter","charCount","removeAttr","ColumnsBlock","append","hide_all_columns","add_click_event_handlers","row","forEach","index","filter","children","map","idx","elem","join","i","hide","toggle_images","columns","event","preventDefault","$element","currentTarget","show_column","hide_column","$column","click","show","scrollTop","column_is_visible","is","style","block_style_allows_images","is_campaign","hasClass","CookiesBlock","cookie","readCookie","setNoTrackCookie","createCookie","slideUp","GalleryBlock","gallery_block_app","models","cleanup_current_view","CurrentView","attributes","attrs","selected_image_ids","initial_focus_points","attr_name","focus_point_details","parseJSON","image_ids_array","toString","split","val_data","hasOwnProperty","JSON","stringify","update_focus_points","img_id","updated_val","all_focus_point","focus_point_data","json_data","image_id","focus_point_id","default_focus_point","focus_point","FocusPointModel","focus_points","FocusPointView","el","Backbone","Model","View","events","change select[class=img-focus-point]","selected_focus_point","img_dimensions","image_type","get_image_type","focus_points_array","focus_points_html","image_focus_points","portrait","options_img_grid","landscape","label","selected_option","update_focus_point_data","evt","$focus_point","dimensions","image_width","parseInt","image_height","NewCoversBlock","cover_type","SocialMediaBlock","set_default_embed_type","toggle_facebook_page_options","$facebook_page_options","SubmenuBlock","editAttributeHeading","editAttributeField","tagName","className","input  input","input  textarea","change select","change input[type=\"radio\"]","change input[type=\"checkbox\"]","inputChanged","e","setValue","first","rangeId","target","rangeValue","document","querySelector","triggerCallbacks","hookName","flatten","values","_views","doAction","TakeActionBoxoutBlock","checked","substr","toLowerCase","P4BlocksAdminUI","blocksMap","setupSelect2Fields","setupP4Fields","setupWPShortcakeHooks","name","viewModel","setupBlock","blockClass","setup","block","jQuery"],"mappings":"AAGA,SAAAA,qBAIA,cAAAC,IAAAC,QASAD,IAAAC,MAAAC,0BAAAC,UAAAC,UAAA,SAAAC,GACA,MAAAC,EAAAC,OAAAC,KAAAC,YAEA,GAAAH,EAAAI,OAAA,CACA,IAAAC,EAAA,CACAC,QAAAN,EACAO,UAAAL,KAAAK,UAAAC,IAAA,iBACAC,KAAAP,KAAAQ,MAAAF,IAAA,SAMA,MAHA,wBAAAN,KAAAK,UAAAC,IAAA,kBAAA,UAAAN,KAAAQ,MAAAF,IAAA,UACAN,KAAAS,SAAAC,OAAA,6BAEAC,EAAAL,IAAAM,QAAAD,EAAAE,OAAAV,EAAAH,KAAAS,UACA,SAAAK,GACAC,EAAAC,KAAAF,EAAAG,KAAAC,MAAA,SAAAC,GACAR,EAAA,YACAJ,KAAA,QAAAY,EAAAC,IACAC,KAAAF,EAAAE,MACAC,KAAA,WAAA,YACAC,SAAA1B,OAKA,OAAA,MAUAL,IAAAC,MAAAC,0BAAAC,UAAA6B,OAAA,WACA,MAAAC,EAAAzB,KACA0B,EAAA,CAAAC,UAAA,GAEA,IAAA,IAAAC,KAAAF,EACA1B,KAAAQ,MAAAF,IAAAsB,IACA5B,KAAAQ,MAAAqB,IAAAD,EAAAF,EAAAE,IAIA,MAAAX,EAAAjB,KAAAQ,MAAAsB,SACAb,EAAAG,GAAA,gBAAApB,KAAAQ,MAAAF,IAAA,QAAA,IAAAN,KAAAQ,MAAAuB,IAEA/B,KAAAgC,IAAAC,KAAAjC,KAAAkC,SAAAjB,IAEA,MAAApB,EAAAG,KAAAgC,IAAAG,KAAAnC,KAAAoC,eAEAC,IAAArC,KAAAK,UAAAC,IAAA,kBACAN,KAAAK,UAAAwB,IAAA,gBAAA,IAEA,IAAA1B,EAAAH,KAAAJ,UAAAC,GACA,GAAA,OAAAM,EAAA,CACA,IAAAmC,EAAAtC,KAAAK,UAAAC,IAAA,iBACAiC,MAAAC,QAAAF,KACAA,EAAAG,KAAAtC,GACAH,KAAAK,UAAAwB,IAAA,gBAAAS,IAIA,MAAAI,EAAA1C,KAAAQ,MAAAF,IAAA,QAAAoC,gBAEAC,EAAA,CACAhB,SAAA3B,KAAAQ,MAAAF,IAAA,YACAsC,eAAA5C,KAAAgC,IACAa,YAAA,EAEAC,KAAA,CACAC,IAAAnC,QACAoC,SAAA,OACAC,MAAA,IACAhC,KAAA,SAAAiC,GAEA,MAAA,wBAAAzB,EAAApB,UAAAC,IAAA,kBAAA,UAAAmB,EAAAjB,MAAAF,IAAA,SACAmB,EAAAhB,SAAAC,OAAA,4BACAC,EAAAE,OAAA,CACAsC,KAAA,WACA,OAAAxC,EAAA,kCAAAyC,OAEAC,EAAAH,EAAAI,KACAC,KAAAL,EAAAK,KACAlD,UAAAoB,EAAApB,UAAAC,IAAA,iBACAC,KAAAkB,EAAAjB,MAAAF,IAAA,QACAI,OAAA,qCACAe,EAAAhB,WAEAE,EAAAE,OAAA,CACAwC,EAAAH,EAAAI,KACAC,KAAAL,EAAAK,KACAlD,UAAAoB,EAAApB,UAAAC,IAAA,iBACAC,KAAAkB,EAAAjB,MAAAF,IAAA,SACAmB,EAAAhB,WAGA+C,eAAA,SAAA1C,EAAAoC,GACA,MAAAjC,EAAAH,EAAAG,KAEA,OADAiC,EAAAK,KAAAL,EAAAK,MAAA,EACAzC,EAAA2C,cAAA,IAAA3C,EAAAG,KAGA,CACAyC,QAAAzC,EAAAC,MACAyC,WAAA,CACAC,KAAAV,EAAAK,KAAAtC,EAAA4C,eAAA5C,EAAA6C,cALA,CAAAJ,QAAA,KASAK,OAAA,GAGAC,aAAA,SAAAC,GACA,OAAAA,GAEAC,mBAAA,EACAC,eAAAnE,KAAAmE,eACAC,kBAAApE,KAAAoE,mBAGAC,EAAAC,OAAAC,OAAA,GAAA5B,EAAAD,GAEA,IAAA8B,EAAAxE,KAQA,OAPAe,EAAA0D,MAAA,WACA5E,EAAA6E,gBAAAC,gBAAAN,GACAG,EAAAhE,MAAAF,IAAA,aACAkE,EAAAI,SAAA/E,IAEA2E,EAAA3E,GAEAG,OCjJA,SAAA6E,gBACA,QAAA,IAAAC,GAAA,UAAA,CAEAC,qBAAAC,UAAA,CACAC,QAAA,EACA/C,SAAA,+BACAgD,KAAA,wBAEAH,qBAAAI,YAAA,CACAF,QAAA,EACA/C,SAAA,iCACAgD,KAAA,wBAEAH,qBAAAK,SAAA,CACAH,QAAA,EACA/C,SAAA,8BACAgD,KAAA,wBAIA,MAAAG,EAAA,WACA1E,EAAA,oCAAA2E,SAAAC,OAAA,WACA5E,EAAA,oCAAA2E,SAAAC,OAAA,YAEAT,GAAAU,UAAAC,MAAAC,UAAA,2BAAAL,GACAP,GAAAU,UAAAC,MAAAC,UAAA,0BAAAL,IC1BA,SAAAM,sBAAAC,GACA,MAAAC,EAAA7F,UAGA,IAAA8E,GAAA,YAKAe,EAAAC,aAAA,WACAF,EAAAG,gBACAH,EAAAG,eAAA,EACAjB,GAAAU,UAAAC,MAAAC,UAAA,iCAAAE,EAAAI,OAAA,eAAAC,2BACAnB,GAAAU,UAAAC,MAAAC,UAAA,2BAAAE,EAAAI,OAAA,eAAAE,kBACApB,GAAAU,UAAAC,MAAAC,UAAA,iCAAAE,EAAAI,OAAA,eAAAG,wBACArB,GAAAU,UAAAC,MAAAC,UAAA,4BAAAE,EAAAI,OAAA,eAAAI,0BAEAtB,GAAAU,UAAAC,MAAAC,UAAA,2BAAAE,EAAAI,OAAA,cAAAI,0BACAtB,GAAAU,UAAAC,MAAAC,UAAA,gCAAAE,EAAAI,OAAA,cAAAK,wBACAvB,GAAAU,UAAAC,MAAAC,UAAA,0BAAAE,EAAAI,OAAA,cAAAK,wBACAvB,GAAAU,UAAAC,MAAAC,UAAA,oCAAAE,EAAAI,OAAA,cAAAM,uBAEAxB,GAAAU,UAAAC,MAAAC,UAAA,oCAAAE,EAAAI,OAAA,iBAAAO,wBAEAzB,GAAAU,UAAAC,MAAAC,UAAA,mCAAAE,EAAAI,OAAA,aAAAQ,2BAEA1B,GAAAU,UAAAC,MAAAC,UAAA,4CAAAE,EAAAI,OAAA,sBAAAS,wBACA3B,GAAAU,UAAAC,MAAAC,UAAA,8CAAAE,EAAAI,OAAA,sBAAAS,wBACA3B,GAAAU,UAAAC,MAAAC,UAAA,2CAAAE,EAAAI,OAAA,sBAAAS,wBACA3B,GAAAU,UAAAC,MAAAC,UAAA,gDAAAE,EAAAI,OAAA,sBAAAS,wBACA3B,GAAAU,UAAAC,MAAAC,UAAA,mDAAAE,EAAAI,OAAA,sBAAAS,wBACA3B,GAAAU,UAAAC,MAAAC,UAAA,uCAAAE,EAAAI,OAAA,sBAAAS,wBACA3B,GAAAU,UAAAC,MAAAC,UAAA,gDAAAE,EAAAI,OAAA,sBAAAS,wBACA3B,GAAAU,UAAAC,MAAAC,UAAA,gDAAAE,EAAAI,OAAA,sBAAAS,yBAIAb,EAAAI,OAAA,iBAAAU,qBAIA5B,GAAAU,UAAAC,MAAAC,UAAA,0BAAA,SAAArF,GACAwF,EAAAC,eAEA,MAAAa,EAAAtG,EAAAC,IAAA,iBACA,sBAAAqG,GACAf,EAAAI,OAAA,aAAAY,WAAAvG,GAGA,8BAAAsG,GACAf,EAAAI,OAAA,oBAAAY,eAKA9B,GAAAU,UAAAC,MAAAC,UAAA,2BAAA,SAAArF,GACAwF,EAAAC,eAEA,MAAAa,EAAAtG,EAAAC,IAAA,iBACAuG,EAAAF,EAAAG,QAAA,aAAA,IACA,GAAA,CAAA,qBAAA,uBAAAC,SAAAJ,GAAA,CAEA,MAAArE,EAAAjC,EAAAC,IAAA,iBAEA,GAAA,OAAAgC,EAAA,CAGA,MAAA0E,EAAArG,EAAA,sBAAAgG,GACAK,EAAAC,SAAA,iBACAD,EAAAE,OAAAC,QAAA,wHAEAH,EAAAI,QAAA,CAAAC,QAAA,KAGAC,QAAAC,IAAAjF,GAAAkF,KAAA,WACAR,EAAAI,QAAA,CAAAC,QAAA,IACAL,EAAAS,YAAA,iBACA9G,EAAA,cAAA8G,YAAA,aACA9G,EAAA,oBAAA+G,SACArH,EAAAsH,MAAA,iBACA/B,EAAAgC,uBAAAf,MAKA,sBAAAF,GACAf,EAAAI,OAAA,aAAA6B,YAAAxH,GAGA,8BAAAsG,GACAf,EAAAI,OAAA,oBAAA6B,iBCzFA,SAAAC,cAAAlC,GACA5F,KAKAqG,uBAAA,WACA,MAAA0B,EAAApH,EAAA,yCAAAyC,MACA4E,EAAArH,EAAA,mCAAAyC,MACA,OAAA2E,GAAA,OAAAC,EACArH,EAAA,oCAAAW,KAAA,YAAA,IAEAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,kBACAtH,EAAA,oCAAAW,KAAA,WAAA,cAZAtB,KAmBAoG,yBAAA,WAEA,OADAzF,EAAA,oCAAAyC,OAEAzC,EAAA,mCAAAW,KAAA,YAAA,GACAX,EAAA,yCAAAW,KAAA,YAAA,GACAX,EAAA,oCAAAW,KAAA,YAAA,KAEAX,EAAA,yCAAAyC,IAAA,MAAA6E,QAAA,kBACAtH,EAAA,yCAAAW,KAAA,WAAA,YACAX,EAAA,mCAAAyC,IAAA,MAAA6E,QAAA,kBACAtH,EAAA,mCAAAW,KAAA,WAAA,YACAX,EAAA,oCAAAW,KAAA,WAAA,cA9BAtB,KAkCAsG,sBAAA,SAAA4B,EAAAC,GACA,MAAAjD,EAAAU,EAAAwC,UAAAD,EAAA,kBACA,GAAA,cAAAjD,QACA,IAAAgD,EAAAG,MAAA,CACA,IAAAtF,EAAA,GAOA,eAJAA,EAFA,aACAuF,KAAAJ,EAAAG,OACAH,EAAAG,MAEAE,UAAAL,EAAAG,UAGAnD,EAAA1E,MAAAqB,IAAA,QAAAkB,GACApC,EAAA,yCAAAyC,IAAAL,MA/CA/C,KAwDA4H,uBAAA,WACA,MAAAY,EAAA7H,EAAA,oCAAAyC,MACA4E,EAAArH,EAAA,mCAAAyC,MACAqF,EAAA9H,EAAA,yCAAAyC,MAEA,OAAAoF,GACA7H,EAAA,yCAAAW,KAAA,WAAA,YACAX,EAAA,mCAAAW,KAAA,WAAA,aAGA,OAAA0G,GAAA,OAAAS,GACA9H,EAAA,oCAAAW,KAAA,WAAA,aCrEA,SAAAoH,sBACA,MAAA7C,EAAA7F,KAEA6F,EAAAe,WAAA,WACAf,EAAA8C,eAGA9C,EAAAgC,YAAA,WACAhC,EAAA+C,oBACA/C,EAAAgD,gBAEAlI,EAAA,2BAAAmI,IAAA,SAAAC,GAAA,QAAA,WACAlD,EAAA+C,oBACA/C,EAAAgD,mBAIAhD,EAAA8C,YAAA,WACAhI,EAAA,iCAAAJ,KAAA,UAAA,YAGAsF,EAAA+C,kBAAA,WACA,MAAAI,EAAArI,EAAA,mCAAAyC,MACAzC,EAAA,8BAAAsI,QAAA,gBAAAC,OAAA,sBAAAF,IAGAnD,EAAAsD,2BAAA,SAAAC,EAAAC,GAEA,GADA1I,EAAAyI,GAAA7I,KAAA,YAAA8I,IACA1I,EAAAyI,GAAAE,KAAA,OAAApJ,OAAA,CAEAS,EADA,qCAAA0I,EAAA,UACAE,YAAAH,GAEAzI,EAAAyI,GAAAN,IAAA,SAAAC,GAAA,QAAA,WACA,MAAAS,EAAA7I,EAAAyI,GAAAhG,MAAAlD,OACAS,EAAAyI,GAAAE,KAAA,0BAAArH,KAAAuH,EAAA,IAAAH,MAIAxD,EAAAgD,cAAA,WACA,MAAAhD,EAAA7F,KAGA,sBAFAW,EAAA,mCAAAyC,OAGAzC,EAAA,0BAAAK,KAAA,WACA6E,EAAAsD,2BAAAnJ,KAAA,MAEAW,EAAA,kCAAAK,KAAA,WACA6E,EAAAsD,2BAAAnJ,KAAA,OAEAW,EAAA,6BAAAK,KAAA,WACA6E,EAAAsD,2BAAAnJ,KAAA,QAGAW,EAAA,0BAAAJ,KAAA,YAAA,IACAI,EAAA,kCAAA8I,WAAA,aACA9I,EAAA,6BAAA8I,WAAA,aACA9I,EAAA,wBAAA+G,WCxDA,SAAAgC,eACA,MAAA7D,EAAA7F,KAMA6F,EAAAe,WAAA,WACAjG,EAAA,wCACAgJ,OAAA,8NAEA3J,KAAA4J,mBAEA5J,KAAA6J,4BAOAhE,EAAAgC,YAAA,WACAlH,EAAA,wCACAgJ,OAAA,wOAEA,IAAAG,EAAA,EAEA,CAAA,EAAA,EAAA,EAAA,GAAAC,QAAA,SAAAC,GAKA,KAJArJ,EAAA,gBAAAsJ,OAAAtJ,EAAA,gBAAAqJ,EAAA,OAAAE,WAAAD,OAAAtJ,EAAA,oBAAAwJ,IAAA,SAAAC,EAAAC,GACA,OAAA1J,EAAA0J,GAAAjH,QACA9C,MAAAgK,KAAA,MAGAR,EAAAE,KAIArJ,EAAA,iCAAA2E,SAAArE,KAAA,MAAA6I,GACA,IAAA,IAAAS,EAAAT,EAAA,EAAAS,GAAA,EAAAA,IACA5J,EAAA,gBAAAsJ,OAAAtJ,EAAA,gBAAA4J,EAAA,OAAAC,OAEA,IAAAV,GACAnJ,EAAA,iCAAAJ,KAAA,WAAA,YAGAP,KAAAyK,gBACAzK,KAAA6J,4BAMAhE,EAAAgE,yBAAA,WACA,MAAAa,EAAA1K,KAEAW,EAAA,iCAAAoI,GAAA,QAAA,SAAA4B,GACAA,EAAAC,iBACA,MAAAC,EAAAlK,EAAAgK,EAAAG,eACA,IAAAhB,EAAAe,EAAAvF,SAAArE,KAAA,OAEA6I,EAAA,IACAY,EAAAK,cAAAjB,GACAe,EAAAvF,SAAArE,KAAA,MAAA6I,GACAnJ,EAAA,oCAAA8I,WAAA,YACA,IAAAK,GACAe,EAAAtK,KAAA,WAAA,eAKAI,EAAA,oCAAAoI,GAAA,QAAA,SAAA4B,GACAA,EAAAC,iBACA,MAAAC,EAAAlK,EAAAgK,EAAAG,eACA,IAAAhB,EAAAe,EAAAvF,SAAArE,KAAA,OAEA6I,GAAA,IACAY,EAAAM,YAAAlB,KACAe,EAAAvF,SAAArE,KAAA,MAAA6I,GACAnJ,EAAA,iCAAA8I,WAAA,YACA,IAAAK,GACAe,EAAAtK,KAAA,WAAA,eAKAI,EAAA,mCAAAmI,IAAA,SAAAC,GAAA,QAAA,WACAlD,EAAA4E,mBASA5E,EAAAmF,YAAA,SAAAlB,GACA,MAAAmB,EAAAtK,EAAA,gBAAAsJ,OAAAtJ,EAAA,gBAAAmJ,EAAA,OAEAmB,EACAf,WACAD,OAAAtJ,EAAA,oBAAAK,KAAA,SAAAgJ,EAAAZ,GACAzI,EAAAyI,GAAAhG,IAAA,IAAA6E,QAAA,WAGAgD,EACA9I,KAAAxB,EAAA,iCAAAK,KAAA,SAAAgJ,EAAAZ,GACAzI,EAAAyI,GAAA8B,UAGAD,EAAAT,KAAA,MAQA3E,EAAA+D,iBAAA,WACA,CAAA,EAAA,EAAA,EAAA,GAAAG,QAAA,SAAAD,GACAnJ,EAAA,gBAAAsJ,OAAAtJ,EAAA,gBAAAmJ,EAAA,OAAAU,UASA3E,EAAAkF,YAAA,SAAAjB,GACAnJ,EAAA,gBAAAsJ,OAAAtJ,EAAA,gBAAAmJ,EAAA,OAAAqB,KAAA,IAAA,WACAtF,EAAA4E,gBACA9J,EAAA,wBAAAyG,QAAA,CACAgE,UAAAzK,EAAA,yBAAAW,KAAA,iBACA,QAQAuE,EAAA4E,cAAA,WACA,CAAA,EAAA,EAAA,EAAA,GAAAV,QAAA,SAAAD,GACA,MAAAuB,EAAA1K,EAAA,gBAAAsJ,OAAAtJ,EAAA,qBAAAmJ,EAAA,OAAAwB,GAAA,YACAC,EAAA5K,EAAA,2CAAAyC,MACAoI,EAAA,YAAAD,EACA5K,EAAA,sCAAAmJ,GAAAZ,OAAAmC,GAAAG,GACA,MAAAC,EAAA9K,EAAA,QAAA+K,SAAA,sBACAL,IACA,YAAAE,GAAAE,GACA9K,EAAA,gCAAAmJ,GAAAU,OACA7J,EAAA,oCAAAmJ,GAAAU,SAEA7J,EAAA,gCAAAmJ,GAAAqB,OACAxK,EAAA,oCAAAmJ,GAAAqB,YCxJA,SAAAQ,eACA,MAAA9F,EAAA7F,KAEA6F,EAAA+F,OAAAC,WAAA,cAEAhG,EAAAiG,iBAAA,WACAnL,EAAA,sBAAA2K,GAAA,aAAA3K,EAAA,gBAAA2K,GAAA,YAEAS,aAAA,WAAA,QAAA,GAGAA,aAAA,WAAA,OAAA,OAIA,MAAAlG,EAAA+F,OACAjL,EAAA,sBAAAW,KAAA,WAAA,GACA,MAAAuE,EAAA+F,SACAjL,EAAA,sBAAAW,KAAA,WAAA,GACAX,EAAA,gBAAAW,KAAA,WAAA,IAIAX,EAAA,sBAAAoI,GAAA,SAAA,WACApI,EAAA,sBAAA2K,GAAA,aACAS,aAAA,aAAA,IAAA,KAGApL,EAAA,kBAAAqL,QAAA,UAEArL,EAAA,gBAAAW,KAAA,WAAA,GACAyK,aAAA,aAAA,KAAA,GACApL,EAAA,kBAAAwK,QAEAtF,EAAAiG,qBAIAnL,EAAA,gBAAAoI,GAAA,SAAA,WACApI,EAAA,gBAAA2K,GAAA,aACA3K,EAAA,sBAAAW,KAAA,WAAA,GACAyK,aAAA,aAAA,IAAA,KACApL,EAAA,kBAAAqL,QAAA,SAEArL,EAAA,sBAAA2K,GAAA,YACAS,aAAA,aAAA,IAAA,MAEAA,aAAA,aAAA,KAAA,GACApL,EAAA,kBAAAwK,QAGAtF,EAAAiG,qBCnDA,SAAAG,eACA,MAAApG,EAAA7F,KACA,IAAAkM,EAAA,CACAzM,MAAA,GACA0M,OAAA,GACAlL,KAAA,IAMA4E,EAAAuG,qBAAA,WACAF,EAAAjL,KAAAoL,cACAH,EAAAjL,KAAAoL,YAAA3E,SACAwE,EAAAjL,KAAAoL,YAAA,OAOAxG,EAAAW,0BAAA,SAAA0B,EAAAC,EAAA9H,GACA,IAAA8L,EAAA9L,EAAAiM,WAAAC,MAAAJ,OACAK,EAAAtE,EAAAG,MACAoE,EAAA,GAEAN,EAAApC,QAAA,SAAAvJ,GACA,IAAAkM,EAAAlM,EAAAF,IAAA,QAEA,GAAA,+BAAAoM,EAAA,CACA,IAAA7B,EAAAlK,EAAA,eAAA+L,EAAA,MAEAC,EAAAnM,EAAAF,IAAA,SAKA,GAJAqM,EAAAA,EAAA7F,QAAA,KAAA,KACA6F,EAAAhM,EAAAiM,UAAAD,QAGA,IAAAH,EAAA,CACA,IAAAK,EAAAL,EAAAM,WAAAC,MAAA,KACAN,EAAA,GAEA9L,EAAAK,KAAA6L,EAAA,SAAA7C,EAAAgD,GAEA,OAAAL,GAAAA,EAAAM,eAAAD,GACAP,EAAAO,GAAAL,EAAAK,GAEAP,EAAAO,GAAA,aAKAP,GADAA,EAAAS,KAAAC,UAAAV,IACA3F,QAAA,KAAA,KAGAtG,EAAAqB,IAAA,QAAA4K,GACA5B,EAAAzH,IAAAqJ,QAIAA,EAAAE,KAQA9G,EAAAuH,oBAAA,SAAAC,EAAAC,GACAnB,EAAApC,QAAA,SAAAvJ,GACA,IAAAkM,EAAAlM,EAAAF,IAAA,QAEA,GAAA,+BAAAoM,EAAA,CACA,IAAA7B,EAAAlK,EAAA,eAAA+L,EAAA,MAEAa,EAAA/M,EAAAF,IAAA,SAGAkN,EAAA,KAGAA,GALAD,EAAAA,EAAAzG,QAAA,KAAA,OAOA,CAAAuG,OAAAC,GAGA,MAAAG,EAAA9M,EAAAiM,UAAAY,GAEAC,EAAAR,eAAAI,KACAI,EAAAJ,GAAAC,GAIAC,GADAA,EAAAL,KAAAC,UAAAM,IACA3G,QAAA,KAAA,KAGAtG,EAAAqB,IAAA,QAAA0L,GACA1C,EAAAzH,IAAAmK,OAMA1H,EAAAuG,uBAKAzL,EAAA,iCAAAK,KAAA,WACA,IAAA0M,EAAA/M,EAAAX,MAAAmC,KAAA,UAAA5B,KAAA,WACAoN,EAAA,eAAAD,EACA/M,EAAAX,MAAAmC,KAAA,gCAAAwH,OAAA,YAAAgE,EAAA,YACA,IAAAC,EAAA,GAEAnB,EAAAQ,eAAAS,KACAE,EAAAnB,EAAAiB,IAGAxB,EAAAjL,KAAA4M,YAAA,IAAA3B,EAAAC,OAAA2B,gBAEA5B,EAAAjL,KAAA4M,YAAAhM,IAAA,CACAwL,OAAAK,EACAK,aAAAH,IAGA1B,EAAAjL,KAAAoL,YAAA,IAAAH,EAAAzM,MAAAuO,eAAA,CACAC,GAAA,IAAAN,EACAnN,MAAA0L,EAAAjL,KAAA4M,cAGA3B,EAAAjL,KAAAoL,YAAA7K,YAQA0K,EAAAC,OAAA2B,gBAAAI,SAAAC,MAAAtN,OAAA,CACAa,SAAA,CACA2L,OAAA,cACAU,aAAA,mBAOA7B,EAAAzM,MAAAuO,eAAAE,SAAAE,KAAAvN,OAAA,CAKAwN,OAAA,CACAC,uCAAA,2BAMA9M,OAAA,WACA,IAAA6L,EAAArN,KAAAgC,IAAAzB,KAAA,MACAgO,EAAAvO,KAAAQ,MAAAF,IAAA,gBAEAkO,EAAAxO,KAAAgC,IAAAsD,SAAAnD,KAAA,eAAAF,OACAwM,EAAAzO,KAAA0O,eAAAF,GAEAG,EAAA,GACAC,EAAA,GAEAA,GAAA,OAEA,aAAAH,GACAE,EAAAE,mBAAAC,SACAF,GAAA,aAAAC,mBAAAE,iBAAAD,SAAA,OAEAH,EAAAE,mBAAAG,UACAJ,GAAA,aAAAC,mBAAAE,iBAAAC,UAAA,MAGAJ,GAAA,UAAAC,mBAAAI,MAAA,yEACA5B,EAAA,oBAEA1M,EAAAK,KAAA2N,EAAA,SAAA3E,EAAAgD,GAEA,IAAAkC,EAAA,GACAX,IAAAvB,EAAA3E,QACA6G,EAAA,YAEAN,GAAA,kBAAA5B,EAAA3E,MAAA,KAAA6G,EAAA,IAAAlC,EAAAiC,MAAA,cAGAL,GAAA,YAEA5O,KAAAgC,IAAAC,KAAA2M,GAEA5O,KAAAQ,MAAAqB,IAAA,CACAkM,aAAApN,EAAA,cAAA0M,EAAArN,KAAAgC,KAAAG,KAAA,aAAAiB,QAEAyC,EAAAuH,oBAAApN,KAAAQ,MAAAF,IAAA,UAAAN,KAAAQ,MAAAF,IAAA,kBAOA6O,wBAAA,SAAAC,GACAA,EAAAxE,iBAEA,IAAAyE,EAAA1O,EAAA,cAAAX,KAAAgC,IAAAzB,KAAA,MAAAP,KAAAgC,KACAqL,EAAArN,KAAAgC,IAAAzB,KAAA,MAAAuG,QAAA,UAAA,IAEA9G,KAAAQ,MAAAqB,IAAA,CACAwL,OAAAA,EACAU,aAAAsB,EAAAlN,KAAA,aAAAiB,QAGAyC,EAAAuH,oBAAApN,KAAAQ,MAAAF,IAAA,UAAAN,KAAAQ,MAAAF,IAAA,kBAMAoO,eAAA,SAAAY,GACA,IAAAb,EAAA,YAEA,QAAA,IAAAa,EAAA,CACAA,EAAAA,EAAAvC,MAAA,KACA,IAAAwC,EAAAC,SAAAF,EAAA,GAAA,IACAG,EAAAD,SAAAF,EAAA,GAAA,IAIAb,EAFAc,EAAAE,EAEA,YACAF,EAAAE,EAEA,WAGA,YAIA,OAAAhB,KClPA,SAAAiB,iBACA,MAAA7J,EAAA7F,KAKA6F,EAAAI,0BAAA,WACA,MAAA0J,EAAAhP,EAAA,kCAAAyC,MACA,cAAAuM,IAIA,MAAAA,GACAhP,EAAA,yCAAAW,KAAA,WAAA,YACAX,EAAA,oCAAAW,KAAA,YAAA,GACAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,mCAAAyC,IAAA,MAAA6E,QAAA,WACA,MAAA0H,GACAhP,EAAA,yCAAAW,KAAA,WAAA,YACAX,EAAA,oCAAAW,KAAA,WAAA,YACAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,mCAAAyC,IAAA,MAAA6E,QAAA,WACA,MAAA0H,IACAhP,EAAA,yCAAAW,KAAA,YAAA,GACAX,EAAA,oCAAAW,KAAA,YAAA,GACAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,mCAAAyC,IAAA,MAAA6E,QAAA,aAOApC,EAAA+B,uBAAA,WACA,MAAA+H,EAAAhP,EAAA,kCAAAyC,MACAoF,EAAA7H,EAAA,oCAAAyC,MACA4E,EAAArH,EAAA,mCAAAyC,MACAqF,EAAA9H,EAAA,yCAAAyC,MACA,cAAAuM,IAIA,MAAAA,GACAhP,EAAA,yCAAAW,KAAA,WAAA,YACAX,EAAA,yCAAAyC,IAAA,MAAA6E,QAAA,UAEA,OAAAD,GAAA,OAAAS,IACA9H,EAAA,oCAAAW,KAAA,WAAA,YACAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,WAEA,OAAAO,IACA7H,EAAA,mCAAAW,KAAA,WAAA,YACAX,EAAA,mCAAAyC,IAAA,MAAA6E,QAAA,YAEA,MAAA0H,GACAhP,EAAA,yCAAAW,KAAA,WAAA,YACAX,EAAA,yCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,oCAAAW,KAAA,WAAA,YACAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,WACA,MAAA0H,IACA,OAAA3H,GAAA,OAAAS,IACA9H,EAAA,oCAAAW,KAAA,WAAA,YACAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,WAEA,OAAAO,IACA7H,EAAA,mCAAAW,KAAA,WAAA,YACAX,EAAA,mCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,yCAAAW,KAAA,WAAA,YACAX,EAAA,yCAAAyC,IAAA,MAAA6E,QAAA,cAQApC,EAAAM,uBAAA,WACA,MAAAwJ,EAAAhP,EAAA,kCAAAyC,MACA4E,EAAArH,EAAA,mCAAAyC,MACAqF,EAAA9H,EAAA,yCAAAyC,MACAoF,EAAA7H,EAAA,oCAAAyC,MACA,cAAAuM,GAIA,MAAAA,IACA,OAAAlH,GACA9H,EAAA,mCAAAW,KAAA,YAAA,GACAX,EAAA,yCAAAW,KAAA,YAAA,GACAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,oCAAAW,KAAA,WAAA,aAEA,OAAA0G,GAAA,OAAAQ,GAAA,OAAAC,IACA9H,EAAA,mCAAAW,KAAA,YAAA,GACAX,EAAA,yCAAAW,KAAA,YAAA,GACAX,EAAA,oCAAAW,KAAA,YAAA,MAQAuE,EAAAO,yBAAA,WACA,MAAAuJ,EAAAhP,EAAA,kCAAAyC,MACAoF,EAAA7H,EAAA,oCAAAyC,MACA,cAAAuM,IAIA,OAAAnH,EACA,MAAAmH,GACAhP,EAAA,mCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,mCAAAW,KAAA,WAAA,aACA,MAAAqO,IACAhP,EAAA,mCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,mCAAAW,KAAA,WAAA,YACAX,EAAA,yCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,yCAAAW,KAAA,WAAA,aAGA,MAAAqO,EACAhP,EAAA,mCAAAW,KAAA,YAAA,GACA,MAAAqO,IACAhP,EAAA,mCAAAW,KAAA,YAAA,GACAX,EAAA,yCAAAW,KAAA,YAAA,MAQAuE,EAAAK,iBAAA,WACA,MAAAyJ,EAAAhP,EAAA,kCAAAyC,MACAoF,EAAA7H,EAAA,oCAAAyC,MACA4E,EAAArH,EAAA,mCAAAyC,MACAqF,EAAA9H,EAAA,yCAAAyC,MACA,cAAAuM,IAIA,MAAAA,EACA,OAAA3H,GAAA,OAAAS,GACA9H,EAAA,oCAAAW,KAAA,WAAA,YACAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,yCAAAW,KAAA,WAAA,aACA,OAAA0G,GAAA,OAAAQ,IACA7H,EAAA,mCAAAW,KAAA,YAAA,GACAX,EAAA,oCAAAW,KAAA,YAAA,IAEA,MAAAqO,GACAhP,EAAA,oCAAAW,KAAA,WAAA,YACAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,mCAAAW,KAAA,YAAA,GACAX,EAAA,yCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,yCAAAW,KAAA,WAAA,aACA,MAAAqO,IACA,OAAA3H,GACArH,EAAA,mCAAAW,KAAA,YAAA,GACAX,EAAA,yCAAAW,KAAA,YAAA,GACAX,EAAA,oCAAAyC,IAAA,MAAA6E,QAAA,UACAtH,EAAA,oCAAAW,KAAA,WAAA,aAEA,OAAA0G,GAAA,OAAAQ,GAAA,OAAAC,GACA9H,EAAA,oCAAAW,KAAA,YAAA,MCtKA,SAAAsO,mBACA,MAAA/J,EAAA7F,KAEA6F,EAAAa,kBAAA,WACAb,EAAAgK,yBACAhK,EAAAiK,gCAGAjK,EAAAU,uBAAA,WACAV,EAAAiK,gCAMAjK,EAAAgK,uBAAA,WACAlP,EAAA,kCAAAyC,OACAzC,EAAA,wCAAAW,KAAA,WAAA,IAOAuE,EAAAiK,6BAAA,WACA,MAAAC,EAAApP,EAAA,6CAGA,kBAFAA,EAAA,kCAAAyC,MAGA2M,EAAA5E,OAEA4E,EAAAvF,QC9BA,SAAAwF,eACAhQ,KAEAiQ,qBAAAzQ,IAAAC,MAAAyQ,mBAAArP,OAAA,CACAsP,QAAA,OACAC,UAAA,0BACA/B,OAAA,CACAgC,eAAA,eACAC,kBAAA,eACAC,gBAAA,eACAC,6BAAA,eACAC,gCAAA,gBAGAC,aAAA,SAAAC,GACA,IAAA3O,EAMA,GAJAhC,KAAAQ,MAAAF,IAAA,UACA0B,EAAAhC,KAAAgC,IAAAG,KAAA,UAAAnC,KAAAQ,MAAAF,IAAA,QAAA,OAGA,UAAAN,KAAAQ,MAAA8L,WAAAnJ,MAAA,aAAAnD,KAAAQ,MAAA8L,WAAAnJ,KACAnD,KAAA4Q,SAAA5O,EAAAiI,OAAA,YAAA4G,QAAAzN,YACA,GAAA,aAAApD,KAAAQ,MAAA8L,WAAAnJ,MAAA,gBAAAnD,KAAAQ,MAAA8L,WAAAnJ,KACAnD,KAAA4Q,SAAA5O,EAAAsJ,GAAA,kBACA,GAAA,UAAAtL,KAAAQ,MAAA8L,WAAAnJ,KAAA,CACA,MAAA2N,EAAA,IAAAH,EAAAI,OAAA3P,GAAA,aACA4P,EAAAL,EAAAI,OAAA1I,MACA4I,SAAAC,cAAAJ,GAAAzI,MAAA2I,EACAhR,KAAA4Q,SAAA5O,EAAAoB,YAEApD,KAAA4Q,SAAA5O,EAAAoB,OAGApD,KAAAmR,oBAGAP,SAAA,SAAAxN,GACApD,KAAAQ,MAAAqB,IAAA,QAAAuB,IAGA+N,iBAAA,WACA,MAEAC,EAAA,CAFApR,KAAAK,UAAAiM,WAAA3F,cACA3G,KAAAQ,MAAAF,IAAA,SACAgK,KAAA,KACApC,EAAAlI,KAAAQ,MAAA0H,QACAC,EAAApH,EAAAsQ,QAAAtQ,EAAAuQ,OAAAtR,KAAAP,MAAA6F,OAAA7F,MAAA8R,SACAlR,EAAAL,KAAAK,UAeAyE,GAAAU,UAAAC,MAAA+L,SAAAJ,EAAAlJ,EAAAC,EAAA9H,MAIAb,IAAAC,MAAAwQ,qBAjEAjQ,KAiEAiQ,qBCnEA,SAAAwB,wBACAzR,KAMAyG,uBAAA,WACA9F,EAAA,yBAAAyC,OACAzC,EAAA,2BAAAyC,OACAzC,EAAA,wBAAAyC,OACAzC,EAAA,6BAAAyC,OACAzC,EAAA,oBAAAyC,OACAzC,EAAA,iCAAAT,OAAA,GACAS,EAAA,gCAAA,IAAAA,EAAA,gCAAA,GAAA+Q,SAEA,YAAA/Q,EAAA,wBAAAyC,MAAAuO,OAAA,EAAA,GAAAC,cACAjR,EAAA,sBAAAT,QACAS,EAAA,wBAAA2E,SAAAqE,OAAA,4EAGAhJ,EAAA,sBAAA+G,SAGA/G,EAAA,6BAAAW,KAAA,YAAA,IACAX,EAAA,6BAAAyC,OACAzC,EAAA,yBAAAW,KAAA,YAAA,GACAX,EAAA,2BAAAW,KAAA,YAAA,GACAX,EAAA,wBAAAW,KAAA,YAAA,GACAX,EAAA,6BAAAW,KAAA,YAAA,GACAX,EAAA,oBAAAW,KAAA,YAAA,GACAX,EAAA,qBAAAW,KAAA,YAAA,GACAX,EAAA,gCAAAW,KAAA,YAAA,GACAX,EAAA,gCAAAW,KAAA,YAAA,KAEAX,EAAA,6BAAA8I,WAAA,YACA9I,EAAA,yBAAA8I,WAAA,YACA9I,EAAA,2BAAA8I,WAAA,YACA9I,EAAA,wBAAA8I,WAAA,YACA9I,EAAA,6BAAA8I,WAAA,YACA9I,EAAA,oBAAA8I,WAAA,YACA9I,EAAA,qBAAA8I,WAAA,YACA9I,EAAA,gCAAA8I,WAAA,YACA9I,EAAA,gCAAA8I,WAAA,cC7BA,SAAAoI,gBAAAtS,EAAAsF,EAAAc,EAAAmM,GACA,MAAAjM,EAAA7F,KAEA6F,EAAAE,eAAA,EAEAF,EAAAkM,mBAAAxS,EACAsG,EAAAmM,cAAAnN,EACAgB,EAAAoM,sBAAAtM,EACAE,EAAAiM,UAAAA,EAEAjM,EAAAG,OAAA,GAEAH,EAAA+B,uBAAA,SAAAf,GACA,OAAAA,GACA,IAAA,WACAhB,EAAAG,OAAA,cAAA4B,yBACA,MACA,IAAA,YACA/B,EAAAG,OAAA,eAAA4B,2BAKA/B,EAAAuC,UAAA,SAAAD,EAAA+J,GACA,OAAAnR,EAAAoB,KACAgG,EACA,SAAAgK,GACA,OAAAD,IAAAC,EAAA3R,MAAAF,IAAA,WAQAuF,EAAAuM,WAAA,SAAAC,GACAxM,EAAAG,OAAAqM,GAAA,IAAAxM,EAAAiM,UAAAO,GAAAxM,IAMAA,EAAAyM,MAAA,WACAzM,EAAAkM,qBACAlM,EAAAmM,gBACAnM,EAAAoM,sBAAApM,GAEA,IAAA,IAAA0M,KAAA1M,EAAAiM,UACAjM,EAAAuM,WAAAG,IAKAC,OAAA,SAAA7R,GACA,aAaA,IAAAkR,gBAAAtS,mBAAAsF,cAAAc,sBAXA,CACAmC,cAAAA,cACAY,oBAAAA,oBACAgB,aAAAA,aACAgG,eAAAA,eACAE,iBAAAA,iBACAI,aAAAA,aACAyB,sBAAAA,sBACAxF,aAAAA,eAIAqG","file":"../blocks-admin.min.js","sourcesContent":["/* global sui, _, shortcodeUIData, ajaxurl */\n/* exported Select2FieldsSetup */\n\nfunction Select2FieldsSetup() {\n\n  // Override shortcake's editAttributeSelect2Field backbone view to manipulate select2 instance.\n  // Modified versions of render and preselect functions of that view.\n  if ('undefined' !== sui.views) {\n\n    /**\n     * Load the values to be preselected before initializing field\n     *\n     * @param $field jQuery object reference to the <select> field\n     * @param object ajaxData object containing ajax action, nonce, and shortcode & model data\n     * @param string includeField how to specify the current selection, ie 'post__in'\n     */\n    sui.views.editAttributeSelect2Field.prototype.preselect = function ($field) {\n      const _preselected = String(this.getValue());\n\n      if (_preselected.length) {\n        let request = {\n          include: _preselected,\n          shortcode: this.shortcode.get('shortcode_tag'),\n          attr: this.model.get('attr')\n        };\n\n        if ('shortcake_newcovers' === this.shortcode.get('shortcode_tag') && 'posts' === this.model.get('attr')) {\n          this.ajaxData.action = 'planet4_blocks_post_field';\n        }\n        return $.get(ajaxurl, $.extend(request, this.ajaxData),\n          function (response) {\n            _.each(response.data.items, function (item) {\n              $('<option>')\n                .attr('value', item.id)\n                .text(item.text)\n                .prop('selected', 'selected')\n                .appendTo($field);\n            });\n          }\n        );\n      }\n      return null;\n    };\n\n    /**\n     * Abstract field for all ajax Select2-powered field views\n     *\n     * Adds useful helpers that are shared between all of the fields which use\n     * Select2 as their UI.\n     *\n     */\n    sui.views.editAttributeSelect2Field.prototype.render = function () {\n      const self = this;\n      const defaults = {multiple: false};\n\n      for (let arg in defaults) {\n        if (!this.model.get(arg)) {\n          this.model.set(arg, defaults[arg]);\n        }\n      }\n\n      const data = this.model.toJSON();\n      data.id = 'shortcode-ui-' + this.model.get('attr') + '-' + this.model.cid;\n\n      this.$el.html(this.template(data));\n\n      const $field = this.$el.find(this.selector);\n\n      if (this.shortcode.get('ajax_requests') === undefined) {\n        this.shortcode.set('ajax_requests', []);\n      }\n      let request = this.preselect($field);\n      if (null !== request) {\n        let requests = this.shortcode.get('ajax_requests');\n        if (Array.isArray(requests)) {\n          requests.push(request);\n          this.shortcode.set('ajax_requests', requests);\n        }\n      }\n\n      const select2_options = this.model.get('meta').select2_options;\n\n      const default_options = {\n        multiple: this.model.get('multiple'),\n        dropdownParent: this.$el,\n        allowClear: true,\n\n        ajax: {\n          url: ajaxurl,\n          dataType: 'json',\n          delay: 250,\n          data: function (params) {\n            // Overriding ajax data function for specific shortcode attribute ('shortcake_newcovers' - 'posts')\n            if ('shortcake_newcovers' === self.shortcode.get('shortcode_tag') && 'posts' === self.model.get('attr')) {\n              self.ajaxData.action = 'planet4_blocks_post_field';\n              return $.extend({\n                type: function () {\n                  return $('input[name=cover_type]:checked').val();\n                },\n                s: params.term, // search term\n                page: params.page,\n                shortcode: self.shortcode.get('shortcode_tag'),\n                attr: self.model.get('attr'),\n                action: 'wp_ajax_planet4_blocks_post_field'\n              }, self.ajaxData);\n            } else {\n              return $.extend({\n                s: params.term, // search term\n                page: params.page,\n                shortcode: self.shortcode.get('shortcode_tag'),\n                attr: self.model.get('attr'),\n              }, self.ajaxData);\n            }\n          },\n          processResults: function (response, params) {\n            const data = response.data;\n            params.page = params.page || 1;\n            if (!response.success || 'undefined' === typeof response.data) {\n              return {results: []};\n            }\n            return {\n              results: data.items,\n              pagination: {\n                more: (params.page * data.items_per_page) < data.found_items\n              }\n            };\n          },\n          cache: true\n        },\n\n        escapeMarkup: function (markup) {\n          return markup;\n        },\n        minimumInputLength: 0,\n        templateResult: this.templateResult,\n        templateSelection: this.templateSelection,\n      };\n\n      const soptions = Object.assign({}, default_options, select2_options);\n\n      let that = this;\n      _.defer(function () {\n        let $fieldSelect2 = $field[shortcodeUIData.select2_handle](soptions); // eslint-disable-line\n        if (that.model.get('multiple')) {\n          that.sortable($field);\n        }\n      }, that, $field);\n\n      return this;\n    };\n  }\n}\n","/* global wp, shortcodeUIFieldData */\n/* exported P4FieldsSetup */\n\nfunction P4FieldsSetup() {\n  if ('undefined' !== typeof (wp.shortcake)) {\n\n    shortcodeUIFieldData.p4_select = {\n      encode: false,\n      template: 'shortcode-ui-field-p4-select',\n      view: 'editAttributeHeading'\n    };\n    shortcodeUIFieldData.p4_checkbox = {\n      encode: false,\n      template: 'shortcode-ui-field-p4-checkbox',\n      view: 'editAttributeHeading'\n    };\n    shortcodeUIFieldData.p4_radio = {\n      encode: false,\n      template: 'shortcode-ui-field-p4-radio',\n      view: 'editAttributeHeading'\n    };\n\n    // break submenu attribute groups into rows\n    const addTags = function () {\n      $('.shortcode-ui-attribute-heading2').parent().before('<p></p>');\n      $('.shortcode-ui-attribute-heading3').parent().before('<p></p>');\n    };\n    wp.shortcake.hooks.addAction('shortcode-ui.render_edit', addTags);\n    wp.shortcake.hooks.addAction('shortcode-ui.render_new', addTags);\n  }\n}\n","/* global wp */\n\nfunction WPShortcakeHooksSetup(p4BlocksUI) { // eslint-disable-line no-unused-vars\n  const me = this;\n\n  // Define shortcake hooks for blocks fields and blocks views.\n  if ('undefined' !== typeof (wp.shortcake)) {\n\n    /**\n     * Attach shortcake hooks for block fields.\n     */\n    me.attach_hooks = function() {\n      if (!p4BlocksUI.hooks_defined) {\n        p4BlocksUI.hooks_defined = true;\n        wp.shortcake.hooks.addAction('shortcake_newcovers.cover_type', p4BlocksUI.blocks['NewCoversBlock'].type_of_cover_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_newcovers.tags', p4BlocksUI.blocks['NewCoversBlock'].tags_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_newcovers.post_types', p4BlocksUI.blocks['NewCoversBlock'].post_types_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_newcovers.posts', p4BlocksUI.blocks['NewCoversBlock'].posts_select_change_hook);\n\n        wp.shortcake.hooks.addAction('shortcake_articles.posts', p4BlocksUI.blocks['ArticlesBlock'].posts_select_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_articles.post_types', p4BlocksUI.blocks['ArticlesBlock'].page_types_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_articles.tags', p4BlocksUI.blocks['ArticlesBlock'].page_types_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_articles.read_more_link', p4BlocksUI.blocks['ArticlesBlock'].read_more_change_hook);\n\n        wp.shortcake.hooks.addAction('shortcake_social_media.embed_type', p4BlocksUI.blocks['SocialMediaBlock'].embed_type_change_hook);\n\n        wp.shortcake.hooks.addAction('shortcake_gallery.multiple_image', p4BlocksUI.blocks['GalleryBlock'].gallery_image_change_hook);\n\n        wp.shortcake.hooks.addAction('shortcake_take_action_boxout.custom_title', p4BlocksUI.blocks['TakeActionBoxoutBlock'].edit_custom_field_hook);\n        wp.shortcake.hooks.addAction('shortcake_take_action_boxout.custom_excerpt', p4BlocksUI.blocks['TakeActionBoxoutBlock'].edit_custom_field_hook);\n        wp.shortcake.hooks.addAction('shortcake_take_action_boxout.custom_link', p4BlocksUI.blocks['TakeActionBoxoutBlock'].edit_custom_field_hook);\n        wp.shortcake.hooks.addAction('shortcake_take_action_boxout.custom_link_text', p4BlocksUI.blocks['TakeActionBoxoutBlock'].edit_custom_field_hook);\n        wp.shortcake.hooks.addAction('shortcake_take_action_boxout.custom_link_new_tab', p4BlocksUI.blocks['TakeActionBoxoutBlock'].edit_custom_field_hook);\n        wp.shortcake.hooks.addAction('shortcake_take_action_boxout.tag_ids', p4BlocksUI.blocks['TakeActionBoxoutBlock'].edit_custom_field_hook);\n        wp.shortcake.hooks.addAction('shortcake_take_action_boxout.background_image', p4BlocksUI.blocks['TakeActionBoxoutBlock'].edit_custom_field_hook);\n        wp.shortcake.hooks.addAction('shortcake_take_action_boxout.take_action_page', p4BlocksUI.blocks['TakeActionBoxoutBlock'].edit_custom_field_hook);\n      }\n\n      // There may be multiple social media embeds on a page; fields need initializing separately for each one.\n      p4BlocksUI.blocks['SocialMediaBlock'].initialize_fields();\n    };\n\n    // Attach hooks when rendering a new p4 block.\n    wp.shortcake.hooks.addAction('shortcode-ui.render_new', function (shortcode) {\n      me.attach_hooks();\n\n      const shortcode_tag = shortcode.get('shortcode_tag');\n      if ('shortcake_columns' === shortcode_tag) {\n        p4BlocksUI.blocks['ColumnsBlock'].render_new(shortcode);\n      }\n\n      if ('shortcake_carousel_header' === shortcode_tag) {\n        p4BlocksUI.blocks['CarouselHeaderBlock'].render_new();\n      }\n    });\n\n    // Trigger hooks when shortcode renders an existing p4 block.\n    wp.shortcake.hooks.addAction('shortcode-ui.render_edit', function (shortcode) {\n      me.attach_hooks();\n\n      const shortcode_tag = shortcode.get('shortcode_tag');\n      const block_name = shortcode_tag.replace('shortcake_', '');\n      if (['shortcake_articles', 'shortcake_newcovers'].includes(shortcode_tag)) {\n\n        const requests = shortcode.get('ajax_requests');\n\n        if (null !== requests) {\n\n          // Block ui / shortcake block view until all fields are populated.\n          const $block_div = $('.shortcode-ui-edit-' + shortcode_tag);\n          $block_div.addClass('not-clickable');\n          $block_div.prev().prepend('<span class=\"spinner is-active\" id=\"bl_loader\"></span>' +\n            '<span id=\"bl_loading_span\">Populating block\\'s fields..</span>');\n          $block_div.animate({opacity: 0.5});\n\n          // Add a hook to unblock shortcake block's view when all ajax requests have been completed.\n          Promise.all(requests).then(function () {\n            $block_div.animate({opacity: 1});\n            $block_div.removeClass('not-clickable');\n            $('#bl_loader').removeClass('is-active');\n            $('#bl_loading_span').remove();\n            shortcode.unset('ajax_requests');\n            p4BlocksUI.initialize_view_fields(block_name);\n          });\n        }\n      }\n\n      if ('shortcake_columns' === shortcode_tag) {\n        p4BlocksUI.blocks['ColumnsBlock'].render_edit(shortcode);\n      }\n\n      if ('shortcake_carousel_header' === shortcode_tag) {\n        p4BlocksUI.blocks['CarouselHeaderBlock'].render_edit();\n      }\n    });\n  }\n}\n","/* exported ArticlesBlock */\n\n// Define hook functions for articles block fields to be used when creating/editing an articles block.\nfunction ArticlesBlock(p4BlocksUI) {\n  const me = this;\n\n  /**\n   * Disable/Enable posts select box based on post types and tags select boxes.\n   */\n  me.page_types_change_hook = function () {\n    const posts_value = $('select[id^=\\'shortcode-ui-post_types\\']').val();\n    const tags = $('select[id^=\\'shortcode-ui-tags\\']').val();\n    if (null === posts_value && null === tags) {\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n    } else {\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change.select2');\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n    }\n  };\n\n  /**\n   * Disable/Enable p4 page types checkboxes based on posts select box value.\n   */\n  me.posts_select_change_hook = function () {\n    const posts_value = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    if (null === posts_value) {\n      $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n      $('input[name^=\\'ignore_categories\\']').prop('disabled', false);\n    } else {\n      $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change.select2');\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change.select2');\n      $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n      $('input[name^=\\'ignore_categories\\']').prop('disabled', 'disabled');\n    }\n  };\n\n  me.read_more_change_hook = function (changed, collection) {\n    const view = p4BlocksUI.find_view(collection, 'read_more_link');\n    if ('undefined' !== view) {\n      if (typeof changed.value !== 'undefined') {\n        let url    = '';\n        const format = /%[0-9a-f]/i;\n        if ( format.test( changed.value ) ) {\n          url = changed.value;\n        } else {\n          url = encodeURI(changed.value);\n        }\n        if ('undefined' !== url) {\n          view.model.set('value', url);\n          $('*[id^=\\'shortcode-ui-read_more_link-\\']').val(url);\n        }\n      }\n    }\n  };\n\n  /**\n   * Disable/enable fields of an articles block when rendering a preexisting articles block.\n   */\n  me.initialize_view_fields = function () {\n    const posts = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    const tags = $('select[id^=\\'shortcode-ui-tags\\']').val();\n    const post_types = $('select[id^=\\'shortcode-ui-post_types\\']').val();\n\n    if (null !== posts) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n\n    } else {\n      if (null !== tags || null !== post_types) {\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n      }\n    }\n  };\n}\n","/* exported CarouselHeaderBlock */\n\nfunction CarouselHeaderBlock() {\n  const me = this;\n\n  me.render_new = function () {\n    me.setDefaults();\n  };\n\n  me.render_edit = function () {\n    me.toggle_subheaders();\n    me.set_maxlength();\n\n    $('input[name=block_style]').off('click').on('click', function() {\n      me.toggle_subheaders();\n      me.set_maxlength();\n    });\n  };\n\n  me.setDefaults = function() {\n    $('input[name=carousel_autoplay]').attr('checked', 'checked');\n  };\n\n  me.toggle_subheaders = function() {\n    const selected_block_style = $('input[name=block_style]:checked').val();\n    $('input[data-subheader=true]').closest('.field-block').toggle('full-width-classic' != selected_block_style);\n  };\n\n  me.add_maxlength_with_counter = function(element, maxLength) {\n    $(element).attr('maxlength', maxLength);\n    if (!$(element).next('div').length) {\n      const maxLengthCounter = '<div class=\"max-length-counter\">0/' + maxLength + '</div>';\n      $(maxLengthCounter).insertAfter(element);\n    }\n    $(element).off('input').on('input', function() {\n      const charCount = $(element).val().length;\n      $(element).next('div.max-length-counter').html(charCount + '/' + maxLength);\n    });\n  };\n\n  me.set_maxlength = function() {\n    const me = this;\n    const selected_block_style = $('input[name=block_style]:checked').val();\n\n    if (selected_block_style == 'full-width-classic') {\n      $('input[name^=\\'header_\\']').each(function() {\n        me.add_maxlength_with_counter(this, 32);\n      });\n      $('textarea[name^=\\'description_\\']').each(function() {\n        me.add_maxlength_with_counter(this, 200);\n      });\n      $('input[name^=\\'link_text_\\']').each(function() {\n        me.add_maxlength_with_counter(this, 24);\n      });\n    } else {\n      $('input[name^=\\'header_\\']').attr('maxlength', 40);\n      $('textarea[name^=\\'description_\\']').removeAttr('maxlength');\n      $('input[name^=\\'link_text_\\']').removeAttr('maxlength');\n      $('div.maxLengthCounter').remove();\n    }\n  };\n}\n","/* exported ColumnsBlock */\n\nfunction ColumnsBlock() {\n  const me = this;\n\n  /**\n   * Called when a new columns block is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.render_new = function () {\n    const $shortcode_div = $('.shortcode-ui-edit-shortcake_columns');\n    $shortcode_div.append('<div data-row=\"0\"><button class=\"button button-small shortcake-columns-add-column\">Add Column</button>'\n      + '<button class=\"button button-small shortcake-columns-remove-column\" disabled=\"disabled\">Remove Column</button></div>');\n    this.hide_all_columns();\n\n    this.add_click_event_handlers();\n  };\n\n  /**\n   * Called when en existing columns block is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.render_edit = function () {\n    const $shortcode_div = $('.shortcode-ui-edit-shortcake_columns');\n    $shortcode_div.append('<div data-row=\"0\"><button class=\"button button-small shortcake-columns-add-column\" data-row=\"1 data-action=\"add\">Add Column</button>'\n      + '<button class=\"button button-small shortcake-columns-remove-column\">Remove Column</button></div>');\n    let row = 0;\n\n    [1, 2, 3, 4].forEach(function (index) {\n      const input_values = $('.field-block').filter($('div[class$=\\'_' + index + '\\']')).children().filter($('input, textarea')).map(function (idx, elem) {\n        return $(elem).val();\n      }).get().join('');\n\n      if ('' !== input_values) {\n        row = index;\n      }\n    });\n\n    $('.shortcake-columns-add-column').parent().data('row', row);\n    for (let i = row+1; i <= 4; i++) {\n      $('.field-block').filter($('div[class$=\\'_' + i + '\\']')).hide();\n    }\n    if (row === 4) {\n      $('.shortcake-columns-add-column').attr('disabled', 'disabled');\n    }\n\n    this.toggle_images();\n    this.add_click_event_handlers();\n  };\n\n  /**\n   * Add click event handlers for add/remove buttons in columns block.\n   */\n  me.add_click_event_handlers = function () {\n    const columns = this;\n    // Add click event handlers for the elements.\n    $('.shortcake-columns-add-column').on('click', function (event) {\n      event.preventDefault();\n      const $element = $(event.currentTarget);\n      let row = $element.parent().data('row');\n\n      if (row < 5) {\n        columns.show_column(++row);\n        $element.parent().data('row', row);\n        $('.shortcake-columns-remove-column').removeAttr('disabled');\n        if (row === 4) {\n          $element.attr('disabled', 'disabled');\n        }\n      }\n    });\n\n    $('.shortcake-columns-remove-column').on('click', function (event) {\n      event.preventDefault();\n      const $element = $(event.currentTarget);\n      let row = $element.parent().data('row');\n\n      if (row >= 0) {\n        columns.hide_column(row--);\n        $element.parent().data('row', row);\n        $('.shortcake-columns-add-column').removeAttr('disabled');\n        if (row === 0) {\n          $element.attr('disabled', 'disabled');\n        }\n      }\n    });\n\n    $('input[name=columns_block_style]').off('click').on('click', function() {\n      me.toggle_images();\n    });\n  };\n\n  /**\n   * Hide a columns block row and reset the values of it's fields.\n   *\n   * @param row\n   */\n  me.hide_column = function (row) {\n    const $column = $('.field-block').filter($('div[class$=\\'_' + row + '\\']'));\n    // Clear all text, textarea fields for this row/column.\n    $column.\n      children().\n      filter($('input, textarea')).each(function (index, element) {\n        $(element).val('').trigger('input');\n      });\n    // Clear image attachment if set in this row/column.\n    $column.\n      find($('.attachment-previews .remove')).each(function (index, element) {\n        $(element).click();\n      });\n    // Hide column's fields.\n    $column.hide(300);\n  };\n\n  /**\n   * Hide all columns block rows.\n   *\n   * @param row\n   */\n  me.hide_all_columns = function () {\n    [1,2,3,4].forEach(function (row) {\n      $( '.field-block' ).filter( $( 'div[class$=\\'_'+row+'\\']' ) ).hide();\n    });\n  };\n\n  /**\n   * Show a columns block row and scroll to bottom.\n   *\n   * @param row\n   */\n  me.show_column = function (row) {\n    $('.field-block').filter($('div[class$=\\'_' + row + '\\']')).show(300, function () {\n      me.toggle_images();\n      $('.media-frame-content').animate({\n        scrollTop: $('.shortcode-ui-content').prop('scrollHeight'),\n      }, 300);\n    });\n  };\n\n  /**\n   * Show/hide images inputs depending on column block style.\n   * Hide CTA buttons for Campaigns on no_image style.\n   */\n  me.toggle_images = function() {\n    [1, 2, 3, 4].forEach(function(row) {\n      const column_is_visible = $('.field-block').filter($('div[class$=\\'title_' + row + '\\']')).is(':visible');\n      const style = $('input[name=columns_block_style]:checked').val();\n      const block_style_allows_images = 'no_image' != style;\n      $('.shortcode-ui-attribute-attachment_' + row).toggle(column_is_visible && block_style_allows_images);\n      const is_campaign = $('body').hasClass('post-type-campaign');\n      if (column_is_visible) {\n        if (style == 'no_image' && is_campaign) {\n          $('.shortcode-ui-attribute-link_' + row).hide();\n          $('.shortcode-ui-attribute-cta_text_' + row).hide();\n        } else {\n          $('.shortcode-ui-attribute-link_' + row).show();\n          $('.shortcode-ui-attribute-cta_text_' + row).show();\n        }\n      }\n    });\n  };\n}\n","/* global createCookie, readCookie */\n/* exported CookiesBlock */\n\nfunction CookiesBlock() {\n  const me = this;\n\n  me.cookie = readCookie('greenpeace');\n\n  me.setNoTrackCookie = function() {\n    if ($('#necessary_cookies').is(':checked') || $('#all_cookies').is(':checked')) {\n      // Remove the 'no_track' cookie, if user accept the cookies consent.\n      createCookie('no_track', 'true', -1);\n    } else {\n      // If user manually disables all trackings, set a 'no_track' cookie.\n      createCookie('no_track', 'true', 20*365);\n    }\n  };\n\n  if ('1' === me.cookie) {\n    $('#necessary_cookies').prop('checked', true);\n  } else if ('2' === me.cookie) {\n    $('#necessary_cookies').prop('checked', true);\n    $('#all_cookies').prop('checked', true);\n  }\n\n  // Add change event for necessary cookies checkbox.\n  $('#necessary_cookies').on('change', function () {\n    if ($('#necessary_cookies').is(':checked')) {\n      createCookie('greenpeace', '1', 365);\n\n      // the .cookie-notice element belongs to the P4 Master Theme\n      $('.cookie-notice').slideUp('slow');\n    } else {\n      $('#all_cookies').prop('checked', false);\n      createCookie('greenpeace', '0', -1);\n      $('.cookie-notice').show();\n    }\n    me.setNoTrackCookie();\n  });\n\n  // Add change event for all cookies checkbox.\n  $('#all_cookies').on('change', function () {\n    if ($('#all_cookies').is(':checked')) {\n      $('#necessary_cookies').prop('checked', true);\n      createCookie('greenpeace', '2', 365);\n      $('.cookie-notice').slideUp('slow');\n    } else {\n      if ($('#necessary_cookies').is(':checked')) {\n        createCookie('greenpeace', '1', 365);\n      } else {\n        createCookie('greenpeace', '0', -1);\n        $('.cookie-notice').show();\n      }\n    }\n    me.setNoTrackCookie();\n  });\n}\n","/* global $, Backbone, image_focus_points */\n/* exported GalleryBlock */\n\nfunction GalleryBlock() {\n  const me = this;\n  let gallery_block_app = {\n    views: {},\n    models: {},\n    data: {}\n  };\n\n  /**\n   * Clean up current view.\n   */\n  me.cleanup_current_view = function() {\n    if ( gallery_block_app.data.CurrentView ) {\n      gallery_block_app.data.CurrentView.remove();\n      gallery_block_app.data.CurrentView = null;\n    }\n  };\n\n  /**\n   * Post types select box change hook.\n   */\n  me.gallery_image_change_hook = function ( changed, collection, shortcode ) { // eslint-disable-line no-unused-vars\n    let models               = shortcode.attributes.attrs.models;\n    let selected_image_ids   = changed.value;\n    let initial_focus_points = {};\n\n    models.forEach(function (model) {\n      let attr_name = model.get('attr');\n\n      if ( 'gallery_block_focus_points' === attr_name ) {\n        let $element  = $('input[name=\"' + attr_name + '\"]');\n\n        let focus_point_details = model.get('value');\n        focus_point_details = focus_point_details.replace(/'/g,'\"');\n        focus_point_details = $.parseJSON(focus_point_details);\n\n        // Filter selected image data\n        if ( 'undefined' !== typeof selected_image_ids ) {\n          let image_ids_array      = selected_image_ids.toString().split(',');\n          let initial_focus_points = {};\n\n          $.each(image_ids_array , function(index, val_data) {\n            // Set default focus point.\n            if( null !== focus_point_details && focus_point_details.hasOwnProperty(val_data)){\n              initial_focus_points[ val_data ] = focus_point_details[val_data];\n            } else {\n              initial_focus_points[ val_data ] = 'left top';  // Set default focus point.\n            }\n          });\n\n          initial_focus_points = JSON.stringify( initial_focus_points );\n          initial_focus_points = initial_focus_points.replace(/\"/g, \"'\"); // eslint-disable-line quotes\n\n          // Set data to model.\n          model.set('value', initial_focus_points);\n          $element.val(initial_focus_points);\n\n        } else {\n          // Edit gallery block.\n          initial_focus_points = focus_point_details ;\n        }\n      }\n    });\n\n    /**\n     * Update focus point data to hidden field and main model.\n     */\n    me.update_focus_points = function (img_id, updated_val) {\n      models.forEach(function (model) {\n        let attr_name = model.get('attr');\n\n        if ( 'gallery_block_focus_points' === attr_name ) {\n          let $element  = $('input[name=\"' + attr_name + '\"]');\n\n          let all_focus_point = model.get('value');\n          all_focus_point     = all_focus_point.replace(/'/g,'\"');\n\n          let focus_point_data = '[]';\n\n          if ( all_focus_point ) {\n            focus_point_data = all_focus_point;\n          } else {\n            focus_point_data = { img_id : updated_val };\n          }\n\n          const json_data = $.parseJSON(focus_point_data);\n\n          if ( json_data.hasOwnProperty( img_id ) ) {\n            json_data[ img_id ] = updated_val;\n          }\n\n          all_focus_point = JSON.stringify( json_data );\n          all_focus_point = all_focus_point.replace( /\"/g, \"'\" ); // eslint-disable-line quotes\n\n          // Set data to model.\n          model.set('value', all_focus_point);\n          $element.val(all_focus_point);\n        }\n      });\n    };\n\n    // Clean up current view before load.\n    me.cleanup_current_view();\n\n    /**\n     * After loading of attachement preview, append the focus point field to each attachment.\n     */\n    $('.shortcake-attachment-preview').each(function() {\n      let image_id       = $(this).find('button').attr('data-id');\n      let focus_point_id = 'focus_point_' + image_id;\n      $(this).find('.thumbnail-details-container').append('<div id=\"'+focus_point_id+'\"></div>');\n      let default_focus_point = '';\n\n      if ( initial_focus_points.hasOwnProperty( image_id ) ) {\n        default_focus_point = initial_focus_points[ image_id ];\n      }\n\n      gallery_block_app.data.focus_point = new gallery_block_app.models.FocusPointModel();\n\n      gallery_block_app.data.focus_point.set({\n        'img_id': image_id,\n        'focus_points': default_focus_point\n      });\n\n      gallery_block_app.data.CurrentView = new gallery_block_app.views.FocusPointView({\n        el: '#'+focus_point_id,\n        model: gallery_block_app.data.focus_point\n      });\n\n      gallery_block_app.data.CurrentView.render();\n\n    });\n  };\n\n  /**\n   * Gallery block focus point model.\n   */\n  gallery_block_app.models.FocusPointModel = Backbone.Model.extend({\n    defaults: {\n      img_id: 'not yet set',\n      focus_points: 'no author yet'\n    }\n  });\n\n  /**\n   * Gallery block focus point view.\n   */\n  gallery_block_app.views.FocusPointView = Backbone.View.extend({\n\n    /**\n     * Set focus point dropdown change event and trigger update_focus_point_data function.\n     */\n    events: {\n      'change select[class=img-focus-point]': 'update_focus_point_data'\n    },\n\n    /**\n     * Reder the html element of focus points selection dropdown.\n     */\n    render: function() {\n      let img_id               = this.$el.attr('id');\n      let selected_focus_point = this.model.get('focus_points');\n\n      let img_dimensions = this.$el.parent().find('.dimensions').html();\n      let image_type     = this.get_image_type(img_dimensions);\n\n      let focus_points_array = [];\n      let focus_points_html  = '';\n\n      focus_points_html += '<hr>';\n\n      if ( 'portrait' === image_type ) {\n        focus_points_array = image_focus_points.portrait;\n        focus_points_html += '<img src=\"' + image_focus_points.options_img_grid.portrait + '\">';\n      } else {\n        focus_points_array = image_focus_points.landscape;\n        focus_points_html += '<img src=\"' + image_focus_points.options_img_grid.landscape + '\">';\n      }\n\n      focus_points_html += '<label>' + image_focus_points.label + ':</label>' +\n        '<select name=\"focus_image_1\" class=\"img-focus-point\" id=\"img-'+img_id+'\" placeholder=\"\">';\n\n      $.each(focus_points_array , function(index, val_data) {\n        // Set default focus point.\n        let selected_option = '';\n        if (selected_focus_point === val_data.value) {\n          selected_option = 'selected';\n        }\n        focus_points_html += '<option value=\"' + val_data.value + '\" ' + selected_option + '>' + val_data.label + '</option>';\n      });\n\n      focus_points_html += '</select>';\n\n      this.$el.html(focus_points_html);\n\n      this.model.set({\n        'focus_points': $('select#img-'+img_id, this.$el).find(':selected').val()\n      });\n      me.update_focus_points(this.model.get('img_id'), this.model.get('focus_points'));\n    },\n\n\n    /**\n     * Update image focus point data to model.\n     */\n    update_focus_point_data: function(evt) {\n      evt.preventDefault();\n\n      let $focus_point = $('select#img-'+this.$el.attr('id'), this.$el);\n      let img_id       = this.$el.attr('id').replace ( /[^\\d.]/g, '' );\n\n      this.model.set({\n        'img_id': img_id,\n        'focus_points': $focus_point.find(':selected').val()\n      });\n\n      me.update_focus_points(this.model.get('img_id'), this.model.get('focus_points'));\n    },\n\n    /**\n     * Return Image type(landscape,portrait) on the basis of image width and height.\n     */\n    get_image_type: function( dimensions ) {\n      let image_type = 'landscape';  // Default image type.\n\n      if ( 'undefined' !== typeof dimensions ) {\n        dimensions = dimensions.split('×');\n        let image_width  = parseInt(dimensions[0], 10);\n        let image_height = parseInt(dimensions[1], 10);\n\n        if (image_width > image_height) {\n          //landscape image.\n          image_type = 'landscape';\n        } else if (image_width < image_height) {\n          //portrait image.\n          image_type = 'portrait';\n        } else {\n          //image width and height are equal, square image.\n          image_type = 'landscape';\n        }\n      }\n\n      return image_type;\n    }\n  });\n}\n","/* exported NewCoversBlock */\n\n// Define hook functions for newcovers block fields to be used when creating/editing a newcovers block.\nfunction NewCoversBlock() {\n  const me = this;\n\n  /**\n   * Cover type field change hook.\n   */\n  me.type_of_cover_change_hook = function () {\n    const cover_type = $('input[name=cover_type]:checked').val();\n    if ('undefined' === cover_type) {\n      return;\n    }\n\n    if ('1' === cover_type) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n    } else if ('2' === cover_type) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n    } else if ('3' === cover_type) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n    }\n  };\n\n  /**\n   * Disable/enable fields of a newcovers block when rendering a preexisting newcovers block.\n   */\n  me.initialize_view_fields = function () {\n    const cover_type = $('input[name=cover_type]:checked').val();\n    const posts = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    const tags = $('select[id^=\\'shortcode-ui-tags\\']').val();\n    const post_types = $('select[id^=\\'shortcode-ui-post_types\\']').val();\n    if ('undefined' === cover_type) {\n      return;\n    }\n\n    if ('1' === cover_type) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change');\n\n      if (null !== tags || null !== post_types) {\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      }\n      if (null !== posts) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n      }\n    } else if ('2' === cover_type) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n    } else if ('3' === cover_type) {\n      if (null !== tags || null !== post_types) {\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      }\n      if (null !== posts) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change');\n      }\n    }\n  };\n\n  /**\n   * Post types select box change hook.\n   */\n  me.post_types_change_hook = function () {\n    const cover_type = $('input[name=cover_type]:checked').val();\n    const tags = $('select[id^=\\'shortcode-ui-tags\\']').val();\n    const post_types = $('select[id^=\\'shortcode-ui-post_types\\']').val();\n    const posts = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    if ('undefined' === cover_type) {\n      return;\n    }\n\n    if ('3' === cover_type) {\n      if (null !== post_types) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n\n      } else if (null === tags && null === posts && null === post_types) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n      }\n    }\n  };\n\n  /**\n   * Post select box change hook.\n   */\n  me.posts_select_change_hook = function () {\n    const cover_type = $('input[name=cover_type]:checked').val();\n    const posts = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    if ('undefined' === cover_type) {\n      return;\n    }\n\n    if (posts !== null) {\n      if ('1' === cover_type) {\n        $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n      } else if ('3' === cover_type) {\n        $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      }\n    } else {\n      if ('1' === cover_type) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n      } else if ('3' === cover_type) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n      }\n    }\n  };\n\n  /**\n   * Tags select box change hook.\n   */\n  me.tags_change_hook = function () {\n    const cover_type = $('input[name=cover_type]:checked').val();\n    const posts = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    const tags = $('select[id^=\\'shortcode-ui-tags\\']').val();\n    const post_types = $('select[id^=\\'shortcode-ui-post_types\\']').val();\n    if ('undefined' === cover_type) {\n      return;\n    }\n\n    if ('1' === cover_type) {\n      if (null !== tags || null !== post_types) {\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      } else if (null === tags && null === posts) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n      }\n    } else if ('2' === cover_type) {\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n      $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n    } else if ('3' === cover_type) {\n      if (null !== tags) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n\n      } else if (null === tags && null === posts && null === post_types) {\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n      }\n    }\n  };\n}\n","/* exported SocialMediaBlock */\n\nfunction SocialMediaBlock() {\n  const me = this;\n\n  me.initialize_fields = function () {\n    me.set_default_embed_type();\n    me.toggle_facebook_page_options();\n  };\n\n  me.embed_type_change_hook = function () {\n    me.toggle_facebook_page_options();\n  };\n\n  /**\n   * If no value, default to oembed\n   */\n  me.set_default_embed_type = function () {\n    if (!$('input[name=embed_type]:checked').val()) {\n      $('input[name=embed_type][value=oembed]').prop('checked', true);\n    }\n  };\n\n  /**\n   * Show/hide Facebook page options according to embed_type\n   */\n  me.toggle_facebook_page_options = function () {\n    const $facebook_page_options = $('.shortcode-ui-attribute-facebook_page_tab');\n    const embed_type = $('input[name=embed_type]:checked').val();\n\n    if ('facebook_page' === embed_type) {\n      $facebook_page_options.show();\n    } else {\n      $facebook_page_options.hide();\n    }\n  };\n}\n","/* global _, sui, wp */\n/* exported SubmenuBlock */\n\nfunction SubmenuBlock() {\n  const me = this;\n\n  me.editAttributeHeading = sui.views.editAttributeField.extend({\n    tagName: 'span',\n    className: 'block-attribute-wrapper',\n    events: {\n      'input  input': 'inputChanged',\n      'input  textarea': 'inputChanged',\n      'change select': 'inputChanged',\n      'change input[type=\"radio\"]': 'inputChanged',\n      'change input[type=\"checkbox\"]': 'inputChanged'\n    },\n\n    inputChanged: function (e) {\n      let $el;\n\n      if (this.model.get('attr')) {\n        $el = this.$el.find('[name=\"' + this.model.get('attr') + '\"]');\n      }\n\n      if ('radio' === this.model.attributes.type || 'p4_radio' === this.model.attributes.type) {\n        this.setValue($el.filter(':checked').first().val());\n      } else if ('checkbox' === this.model.attributes.type || 'p4_checkbox' === this.model.attributes.type) {\n        this.setValue($el.is(':checked'));\n      } else if ('range' === this.model.attributes.type) {\n        const rangeId = '#' + e.target.id + '_indicator';\n        const rangeValue = e.target.value;\n        document.querySelector(rangeId).value = rangeValue;\n        this.setValue($el.val());\n      } else {\n        this.setValue($el.val());\n      }\n\n      this.triggerCallbacks();\n    },\n\n    setValue: function (val) {\n      this.model.set('value', val);\n    },\n\n    triggerCallbacks: function () {\n      const shortcodeName = this.shortcode.attributes.shortcode_tag;\n      const attributeName = this.model.get('attr');\n      const hookName = [shortcodeName, attributeName].join('.');\n      const changed = this.model.changed;\n      const collection = _.flatten(_.values(this.views.parent.views._views));\n      const shortcode = this.shortcode;\n\n      /*\n      * Action run when an attribute value changes on a shortcode\n      *\n      * Called as `{shortcodeName}.{attributeName}`.\n      *\n      * @param changed (object)\n      *           The update, ie. { \"changed\": \"newValue\" }\n      * @param viewModels (array)\n      *           The collections of views (editAttributeFields)\n      *                         which make up this shortcode UI form\n      * @param shortcode (object)\n      *           Reference to the shortcode model which this attribute belongs to.\n      */\n      wp.shortcake.hooks.doAction(hookName, changed, collection, shortcode);\n    }\n  });\n\n  sui.views.editAttributeHeading = me.editAttributeHeading;\n}\n","/* exported TakeActionBoxoutBlock */\n\nfunction TakeActionBoxoutBlock() {\n  const me = this;\n\n  /**\n   * Hook disables custom fields when value from dropdown is selected\n   * or disables dropdown if any of the custom fields are filled out\n   */\n  me.edit_custom_field_hook = function () {\n    if ( $( '[name=\"custom_title\"]' ).val() ||\n      $( '[name=\"custom_excerpt\"]' ).val() ||\n      $( '[name=\"custom_link\"]' ).val() ||\n      $( '[name=\"custom_link_text\"]' ).val() ||\n      $( '[name=\"tag_ids\"]' ).val() ||\n      $( '.shortcake-attachment-preview' ).length > 0 ||\n      ( $( '[name=\"custom_link_new_tab\"]' )[0] && $( '[name=\"custom_link_new_tab\"]' )[0].checked ) ) {\n\n      if ($( '[name=\"custom_link\"]' ).val().substr(0, 8).toLowerCase() != 'https://') {\n        if ( !$('.custom-link-error').length ) {\n          $( '[name=\"custom_link\"]' ).parent().append('<div class=\"custom-link-error\">The URL must start with \"HTTPS://\".</div>');\n        }\n      } else {\n        $('.custom-link-error').remove();\n      }\n\n      $( '.shortcode-ui-post-select' ).prop( 'disabled', true );\n    } else if ( $( '.shortcode-ui-post-select' ).val() ) {\n      $( '[name=\"custom_title\"]' ).prop( 'disabled', true );\n      $( '[name=\"custom_excerpt\"]' ).prop( 'disabled', true );\n      $( '[name=\"custom_link\"]' ).prop( 'disabled', true );\n      $( '[name=\"custom_link_text\"]' ).prop( 'disabled', true );\n      $( '[name=\"tag_ids\"]' ).prop( 'disabled', true );\n      $( '#background_image' ).prop( 'disabled', true );\n      $( '[name=\"custom_link_new_tab\"]' ).prop( 'disabled', true );\n      $( '.shortcake-attachment-select' ).prop( 'disabled', true );\n    } else {\n      $( '.shortcode-ui-post-select' ).removeAttr( 'disabled' );\n      $( '[name=\"custom_title\"]' ).removeAttr( 'disabled' );\n      $( '[name=\"custom_excerpt\"]' ).removeAttr( 'disabled' );\n      $( '[name=\"custom_link\"]' ).removeAttr( 'disabled' );\n      $( '[name=\"custom_link_text\"]' ).removeAttr( 'disabled' );\n      $( '[name=\"tag_ids\"]' ).removeAttr( 'disabled' );\n      $( '#background_image' ).removeAttr( 'disabled' );\n      $( '[name=\"custom_link_new_tab\"]' ).removeAttr( 'disabled' );\n      $( '.shortcake-attachment-select' ).removeAttr( 'disabled' );\n    }\n  };\n}","/*\n  global _,\n    Select2FieldsSetup,\n    P4FieldsSetup,\n    WPShortcakeHooksSetup,\n    ArticlesBlock,\n    ColumnsBlock,\n    NewCoversBlock,\n    CarouselHeaderBlock,\n    SocialMediaBlock,\n    SubmenuBlock,\n    TakeActionBoxoutBlock,\n    GalleryBlock\n*/\n\n// Define a p4_blocks object that holds functions used during rendering backend blocks' views.\nfunction P4BlocksAdminUI(Select2FieldsSetup, P4FieldsSetup, WPShortcakeHooksSetup, blocksMap) {\n  const me = this;\n\n  me.hooks_defined = false;\n\n  me.setupSelect2Fields = Select2FieldsSetup;\n  me.setupP4Fields = P4FieldsSetup;\n  me.setupWPShortcakeHooks = WPShortcakeHooksSetup;\n  me.blocksMap = blocksMap;\n\n  me.blocks = {};\n\n  me.initialize_view_fields = function (block_name) {\n    switch (block_name) {\n    case 'articles':\n      me.blocks['ArticlesBlock'].initialize_view_fields();\n      break;\n    case 'newcovers':\n      me.blocks['NewCoversBlock'].initialize_view_fields();\n      break;\n    }\n  };\n\n  me.find_view = function (collection, name) {\n    return _.find(\n      collection,\n      function (viewModel) {\n        return name === viewModel.model.get('attr');\n      }\n    );\n  };\n\n  /**\n   * Call a block's constructor and inject this class down.\n   */\n  me.setupBlock = function(blockClass) {\n    me.blocks[blockClass] = new me.blocksMap[blockClass](me);\n  };\n\n  /**\n   * Initialize common components\n   */\n  me.setup = function() {\n    me.setupSelect2Fields();\n    me.setupP4Fields();\n    me.setupWPShortcakeHooks(me);\n\n    for (let block in me.blocksMap) {\n      me.setupBlock(block);\n    }\n  };\n}\n\njQuery(function ($) { // eslint-disable-line no-unused-vars\n  'use strict';\n\n  const blocksMap = {\n    'ArticlesBlock'         : ArticlesBlock,\n    'CarouselHeaderBlock'   : CarouselHeaderBlock,\n    'ColumnsBlock'          : ColumnsBlock,\n    'NewCoversBlock'        : NewCoversBlock,\n    'SocialMediaBlock'      : SocialMediaBlock,\n    'SubmenuBlock'          : SubmenuBlock,\n    'TakeActionBoxoutBlock' : TakeActionBoxoutBlock,\n    'GalleryBlock'          : GalleryBlock\n  };\n\n  const p4BlocksUI = new P4BlocksAdminUI(Select2FieldsSetup, P4FieldsSetup, WPShortcakeHooksSetup, blocksMap);\n  p4BlocksUI.setup();\n});\n"]}