{"version":3,"sources":["Select2FieldsSetup.js","P4FieldsSetup.js","WPShortcakeHooksSetup.js","ArticlesBlock.js","CarouselHeaderBlock.js","ColumnsBlock.js","CookiesBlock.js","GalleryBlock.js","NewCoversBlock.js","SocialMediaBlock.js","SubmenuBlock.js","blocks-admin.js"],"names":["Select2FieldsSetup","sui","views","editAttributeSelect2Field","prototype","preselect","$field","_preselected","String","this","getValue","length","request","include","shortcode","get","attr","model","ajaxData","action","$","ajaxurl","extend","response","_","each","data","items","item","id","text","prop","appendTo","render","self","defaults","multiple","arg","set","toJSON","cid","$el","html","template","find","selector","undefined","requests","Array","isArray","push","select2_options","default_options","dropdownParent","allowClear","ajax","url","dataType","delay","params","type","val","s","term","page","processResults","success","results","pagination","more","items_per_page","found_items","cache","escapeMarkup","markup","minimumInputLength","templateResult","templateSelection","soptions","Object","assign","that","defer","shortcodeUIData","select2_handle","sortable","P4FieldsSetup","wp","shortcodeUIFieldData","p4_select","encode","view","p4_checkbox","p4_radio","addTags","parent","before","shortcake","hooks","addAction","WPShortcakeHooksSetup","p4BlocksUI","me","attach_hooks","hooks_defined","blocks","type_of_cover_change_hook","tags_change_hook","post_types_change_hook","posts_select_change_hook","page_types_change_hook","read_more_change_hook","embed_type_change_hook","gallery_image_change_hook","initialize_fields","shortcode_tag","render_new","block_name","replace","includes","$block_div","addClass","prev","prepend","animate","opacity","Promise","all","then","removeClass","remove","unset","initialize_view_fields","render_edit","ArticlesBlock","alert","console","log","posts_value","tags","trigger","changed","collection","find_view","value","test","encodeURI","posts","post_types","CarouselHeaderBlock","setDefaults","toggle_subheaders","set_maxlength","off","on","selected_block_style","closest","toggle","add_maxlength_with_counter","element","maxLength","next","insertAfter","charCount","removeAttr","ColumnsBlock","append","hide_all_columns","add_click_event_handlers","row","forEach","index","filter","children","map","idx","elem","join","i","hide","toggle_images","columns","event","preventDefault","$element","currentTarget","show_column","hide_column","$column","click","show","scrollTop","column_is_visible","is","block_style_allows_images","CookiesBlock","cookie","readCookie","setNoTrackCookie","createCookie","slideUp","GalleryBlock","attributes","attrs","models","attr_name","imageId","NewCoversBlock","cover_type","SocialMediaBlock","set_default_embed_type","toggle_facebook_page_options","$facebook_page_options","SubmenuBlock","editAttributeHeading","editAttributeField","tagName","className","events","input  input","input  textarea","change select","change input[type=\"radio\"]","change input[type=\"checkbox\"]","inputChanged","e","setValue","first","rangeId","target","rangeValue","document","querySelector","triggerCallbacks","hookName","flatten","values","_views","doAction","P4BlocksAdminUI","blocksMap","setupSelect2Fields","setupP4Fields","setupWPShortcakeHooks","name","viewModel","setupBlock","blockClass","setup","block","jQuery"],"mappings":"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","file":"../blocks-admin.min.js","sourcesContent":["/* global sui, _, shortcodeUIData, ajaxurl */\n\nfunction Select2FieldsSetup() { // eslint-disable-line no-unused-vars\n\n  // Override shortcake's editAttributeSelect2Field backbone view to manipulate select2 instance.\n  // Modified versions of render and preselect functions of that view.\n  if ('undefined' !== sui.views) {\n\n    /**\n     * Load the values to be preselected before initializing field\n     *\n     * @param $field jQuery object reference to the <select> field\n     * @param object ajaxData object containing ajax action, nonce, and shortcode & model data\n     * @param string includeField how to specify the current selection, ie 'post__in'\n     */\n    sui.views.editAttributeSelect2Field.prototype.preselect = function ($field) {\n      var _preselected = String(this.getValue());\n\n      if (_preselected.length) {\n        var request = {\n          include: _preselected,\n          shortcode: this.shortcode.get('shortcode_tag'),\n          attr: this.model.get('attr')\n        };\n\n        if ('shortcake_newcovers' === this.shortcode.get('shortcode_tag') && 'posts' === this.model.get('attr')) {\n          this.ajaxData.action = 'planet4_blocks_post_field';\n        }\n        return $.get(ajaxurl, $.extend(request, this.ajaxData),\n          function (response) {\n            _.each(response.data.items, function (item) {\n              $('<option>')\n                .attr('value', item.id)\n                .text(item.text)\n                .prop('selected', 'selected')\n                .appendTo($field);\n            });\n          }\n        );\n      }\n      return null;\n    };\n\n    /**\n     * Abstract field for all ajax Select2-powered field views\n     *\n     * Adds useful helpers that are shared between all of the fields which use\n     * Select2 as their UI.\n     *\n     */\n    sui.views.editAttributeSelect2Field.prototype.render = function () {\n      var self = this,\n        defaults = {multiple: false};\n\n      for (var arg in defaults) {\n        if (!this.model.get(arg)) {\n          this.model.set(arg, defaults[arg]);\n        }\n      }\n\n      var data = this.model.toJSON();\n      data.id = 'shortcode-ui-' + this.model.get('attr') + '-' + this.model.cid;\n\n      this.$el.html(this.template(data));\n\n      var $field = this.$el.find(this.selector);\n\n      if (this.shortcode.get('ajax_requests') === undefined) {\n        this.shortcode.set('ajax_requests', []);\n      }\n      var request = this.preselect($field);\n      if (null !== request) {\n        var requests = this.shortcode.get('ajax_requests');\n        if (Array.isArray(requests)) {\n          requests.push(request);\n          this.shortcode.set('ajax_requests', requests);\n        }\n      }\n\n      var select2_options = this.model.get('meta').select2_options;\n\n      var default_options = {\n        multiple: this.model.get('multiple'),\n        dropdownParent: this.$el,\n        allowClear: true,\n\n        ajax: {\n          url: ajaxurl,\n          dataType: 'json',\n          delay: 250,\n          data: function (params) {\n            // Overriding ajax data function for specific shortcode attribute ('shortcake_newcovers' - 'posts')\n            if ('shortcake_newcovers' === self.shortcode.get('shortcode_tag') && 'posts' === self.model.get('attr')) {\n              self.ajaxData.action = 'planet4_blocks_post_field';\n              return $.extend({\n                type: function () {\n                  return $('input[name=cover_type]:checked').val();\n                },\n                s: params.term, // search term\n                page: params.page,\n                shortcode: self.shortcode.get('shortcode_tag'),\n                attr: self.model.get('attr'),\n                action: 'wp_ajax_planet4_blocks_post_field'\n              }, self.ajaxData);\n            } else {\n              return $.extend({\n                s: params.term, // search term\n                page: params.page,\n                shortcode: self.shortcode.get('shortcode_tag'),\n                attr: self.model.get('attr'),\n              }, self.ajaxData);\n            }\n          },\n          processResults: function (response, params) {\n            var data = response.data;\n            params.page = params.page || 1;\n            if (!response.success || 'undefined' === typeof response.data) {\n              return {results: []};\n            }\n            return {\n              results: data.items,\n              pagination: {\n                more: (params.page * data.items_per_page) < data.found_items\n              }\n            };\n          },\n          cache: true\n        },\n\n        escapeMarkup: function (markup) {\n          return markup;\n        },\n        minimumInputLength: 0,\n        templateResult: this.templateResult,\n        templateSelection: this.templateSelection,\n      };\n\n      var soptions = Object.assign({}, default_options, select2_options);\n\n      var that = this;\n      _.defer(function () {\n        var $fieldSelect2 = $field[shortcodeUIData.select2_handle](soptions); // eslint-disable-line\n        if (that.model.get('multiple')) {\n          that.sortable($field);\n        }\n      }, that, $field);\n\n      return this;\n    };\n  }\n}","/* global wp, shortcodeUIFieldData */\n\nfunction P4FieldsSetup() { // eslint-disable-line no-unused-vars\n  if ('undefined' !== typeof (wp.shortcake)) {\n\n    shortcodeUIFieldData.p4_select = {\n      encode: false,\n      template: 'shortcode-ui-field-p4-select',\n      view: 'editAttributeHeading'\n    };\n    shortcodeUIFieldData.p4_checkbox = {\n      encode: false,\n      template: 'shortcode-ui-field-p4-checkbox',\n      view: 'editAttributeHeading'\n    };\n    shortcodeUIFieldData.p4_radio = {\n      encode: false,\n      template: 'shortcode-ui-field-p4-radio',\n      view: 'editAttributeHeading'\n    };\n\n    // break submenu attribute groups into rows\n    var addTags = function () {\n      $('.shortcode-ui-attribute-heading2').parent().before('<p></p>');\n      $('.shortcode-ui-attribute-heading3').parent().before('<p></p>');\n    };\n    wp.shortcake.hooks.addAction('shortcode-ui.render_edit', addTags);\n    wp.shortcake.hooks.addAction('shortcode-ui.render_new', addTags);\n  }\n}\n","/* global wp */\n\nfunction WPShortcakeHooksSetup(p4BlocksUI) { // eslint-disable-line no-unused-vars\n  var me = this;\n\n  // Define shortcake hooks for blocks fields and blocks views.\n  if ('undefined' !== typeof (wp.shortcake)) {\n\n    /**\n     * Attach shortcake hooks for block fields.\n     */\n    me.attach_hooks = function() {\n      if (!p4BlocksUI.hooks_defined) {\n        p4BlocksUI.hooks_defined = true;\n        wp.shortcake.hooks.addAction('shortcake_newcovers.cover_type', p4BlocksUI.blocks['NewCoversBlock'].type_of_cover_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_newcovers.tags', p4BlocksUI.blocks['NewCoversBlock'].tags_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_newcovers.post_types', p4BlocksUI.blocks['NewCoversBlock'].post_types_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_newcovers.posts', p4BlocksUI.blocks['NewCoversBlock'].posts_select_change_hook);\n\n        wp.shortcake.hooks.addAction('shortcake_articles.posts', p4BlocksUI.blocks['ArticlesBlock'].posts_select_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_articles.post_types', p4BlocksUI.blocks['ArticlesBlock'].page_types_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_articles.tags', p4BlocksUI.blocks['ArticlesBlock'].page_types_change_hook);\n        wp.shortcake.hooks.addAction('shortcake_articles.read_more_link', p4BlocksUI.blocks['ArticlesBlock'].read_more_change_hook);\n\n        wp.shortcake.hooks.addAction('shortcake_social_media.embed_type', p4BlocksUI.blocks['SocialMediaBlock'].embed_type_change_hook);\n\n        wp.shortcake.hooks.addAction('shortcake_gallery.multiple_image', p4BlocksUI.blocks['GalleryBlock'].gallery_image_change_hook);\n      }\n\n      // There may be multiple social media embeds on a page; fields need initializing separately for each one.\n      p4BlocksUI.blocks['SocialMediaBlock'].initialize_fields();\n    };\n\n    // Attach hooks when rendering a new p4 block.\n    wp.shortcake.hooks.addAction('shortcode-ui.render_new', function (shortcode) {\n      me.attach_hooks();\n\n      var shortcode_tag = shortcode.get('shortcode_tag');\n      if ('shortcake_columns' === shortcode_tag) {\n        p4BlocksUI.blocks['ColumnsBlock'].render_new(shortcode);\n      }\n\n      if ('shortcake_carousel_header' === shortcode_tag) {\n        p4BlocksUI.blocks['CarouselHeaderBlock'].render_new();\n      }\n    });\n\n    // Trigger hooks when shortcode renders an existing p4 block.\n    wp.shortcake.hooks.addAction('shortcode-ui.render_edit', function (shortcode) {\n      me.attach_hooks();\n\n      var shortcode_tag = shortcode.get('shortcode_tag');\n      var block_name = shortcode_tag.replace('shortcake_', '');\n      if (['shortcake_articles', 'shortcake_newcovers'].includes(shortcode_tag)) {\n\n        var requests = shortcode.get('ajax_requests');\n\n        if (null !== requests) {\n\n          // Block ui / shortcake block view until all fields are populated.\n          var $block_div = $('.shortcode-ui-edit-' + shortcode_tag);\n          $block_div.addClass('not-clickable');\n          $block_div.prev().prepend('<span class=\"spinner is-active\" id=\"bl_loader\"></span>' +\n            '<span id=\"bl_loading_span\">Populating block\\'s fields..</span>');\n          $block_div.animate({opacity: 0.5});\n\n          // Add a hook to unblock shortcake block's view when all ajax requests have been completed.\n          Promise.all(requests).then(function () {\n            $block_div.animate({opacity: 1});\n            $block_div.removeClass('not-clickable');\n            $('#bl_loader').removeClass('is-active');\n            $('#bl_loading_span').remove();\n            shortcode.unset('ajax_requests');\n            p4BlocksUI.initialize_view_fields(block_name);\n          });\n        }\n      }\n\n      if ('shortcake_columns' === shortcode_tag) {\n        p4BlocksUI.blocks['ColumnsBlock'].render_edit(shortcode);\n      }\n\n      if ('shortcake_carousel_header' === shortcode_tag) {\n        p4BlocksUI.blocks['CarouselHeaderBlock'].render_edit();\n      }\n    });\n  }\n}\n","// Define hook functions for articles block fields to be used when creating/editing an articles block.\nfunction ArticlesBlock(p4BlocksUI) { // eslint-disable-line no-unused-vars\n  var me = this;\n\n  /**\n   * Disable/Enable posts select box based on post types and tags select boxes.\n   */\n  me.page_types_change_hook = function () { alert('hi....'); console.log(1234556); // eslint-disable-line no-console\n    var posts_value = $('select[id^=\\'shortcode-ui-post_types\\']').val();\n    var tags = $('select[id^=\\'shortcode-ui-tags\\']').val();\n    if (null === posts_value && null === tags) {\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n    } else {\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change.select2');\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n    }\n  };\n\n  /**\n   * Disable/Enable p4 page types checkboxes based on posts select box value.\n   */\n  me.posts_select_change_hook = function () { alert('hi....'); console.log(1234556); // eslint-disable-line no-console\n    var posts_value = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    if (null === posts_value) {\n      $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n      $('input[name^=\\'ignore_categories\\']').prop('disabled', false);\n    } else {\n      $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change.select2');\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change.select2');\n      $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n      $('input[name^=\\'ignore_categories\\']').prop('disabled', 'disabled');\n    }\n  };\n\n  me.read_more_change_hook = function (changed, collection) {\n    var view = p4BlocksUI.find_view(collection, 'read_more_link');\n    if ('undefined' !== view) {\n      if (typeof changed.value !== 'undefined') {\n        var url    = '';\n        var format = /%[0-9a-f]/i;\n        if ( format.test( changed.value ) ) {\n          url = changed.value;\n        } else {\n          url = encodeURI(changed.value);\n        }\n        if ('undefined' !== url) {\n          view.model.set('value', url);\n          $('*[id^=\\'shortcode-ui-read_more_link-\\']').val(url);\n        }\n      }\n    }\n  };\n\n  /**\n   * Disable/enable fields of an articles block when rendering a preexisting articles block.\n   */\n  me.initialize_view_fields = function () {\n    var posts = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    var tags = $('select[id^=\\'shortcode-ui-tags\\']').val();\n    var post_types = $('select[id^=\\'shortcode-ui-post_types\\']').val();\n\n    if (null !== posts) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n\n    } else {\n      if (null !== tags || null !== post_types) {\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n      }\n    }\n  };\n}\n","function CarouselHeaderBlock(p4BlocksUI) { // eslint-disable-line no-unused-vars\n  var me = this;\n\n  me.render_new = function () {\n    me.setDefaults();\n    console.log('I am in carousal header block...'); // eslint-disable-line no-console\n  };\n\n  me.render_edit = function () {\n    me.toggle_subheaders();\n    me.set_maxlength();\n\n    $('input[name=block_style]').off('click').on('click', function() {\n      me.toggle_subheaders();\n      me.set_maxlength();\n    });\n  };\n\n  me.setDefaults = function() {\n    //$('input[name=carousel_autoplay]').attr('checked', 'checked');\n    console.log('I am in carousal header block... set default'); // eslint-disable-line no-console\n  };\n\n  me.toggle_subheaders = function() {\n    var selected_block_style = $('input[name=block_style]:checked').val();\n    $('input[data-subheader=true]').closest('.field-block').toggle('full-width-classic' != selected_block_style);\n  };\n\n  me.add_maxlength_with_counter = function(element, maxLength) {\n    $(element).attr('maxlength', maxLength);\n    if (!$(element).next('div').length) {\n      var maxLengthCounter = '<div class=\"max-length-counter\">0/' + maxLength + '</div>';\n      $(maxLengthCounter).insertAfter(element);\n    }\n    $(element).off('input').on('input', function() {\n      var charCount = $(element).val().length;\n      $(element).next('div.max-length-counter').html(charCount + '/' + maxLength);\n    });\n  };\n\n  me.set_maxlength = function() {\n    var me = this;\n    var selected_block_style = $('input[name=block_style]:checked').val();\n\n    if (selected_block_style == 'full-width-classic') { alert(123);\n      $('input[name^=\\'header_\\']').each(function() {\n        me.add_maxlength_with_counter(this, 32);\n      });\n      $('textarea[name^=\\'description_\\']').each(function() {\n        me.add_maxlength_with_counter(this, 200);\n      });\n      $('input[name^=\\'link_text_\\']').each(function() {\n        me.add_maxlength_with_counter(this, 24);\n      });\n    } else {\n      $('input[name^=\\'header_\\']').attr('maxlength', 40);\n      $('textarea[name^=\\'description_\\']').removeAttr('maxlength');\n      $('input[name^=\\'link_text_\\']').removeAttr('maxlength');\n      $('div.maxLengthCounter').remove();\n    }\n  };\n}\n","function ColumnsBlock(p4BlocksUI) { // eslint-disable-line no-unused-vars\n  var me = this;\n\n  /**\n   * Called when a new columns block is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.render_new = function () {\n    var $shortcode_div = $('.shortcode-ui-edit-shortcake_columns');\n    $shortcode_div.append('<div data-row=\"0\"><button class=\"button button-small shortcake-columns-add-column\">Add Column</button>'\n      + '<button class=\"button button-small shortcake-columns-remove-column\" disabled=\"disabled\">Remove Column</button></div>');\n    this.hide_all_columns();\n\n    this.add_click_event_handlers();\n  };\n\n  /**\n   * Called when en existing columns block is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.render_edit = function () {\n    var $shortcode_div = $('.shortcode-ui-edit-shortcake_columns');\n    $shortcode_div.append('<div data-row=\"0\"><button class=\"button button-small shortcake-columns-add-column\" data-row=\"1 data-action=\"add\">Add Column</button>'\n      + '<button class=\"button button-small shortcake-columns-remove-column\">Remove Column</button></div>');\n    var row = 0;\n\n    [1, 2, 3, 4].forEach(function (index) {\n      var input_values = $('.field-block').filter($('div[class$=\\'_' + index + '\\']')).children().filter($('input, textarea')).map(function (idx, elem) {\n        return $(elem).val();\n      }).get().join('');\n\n      if ('' !== input_values) {\n        row = index;\n      }\n    });\n\n    $('.shortcake-columns-add-column').parent().data('row', row);\n    for (var i = row+1; i <= 4; i++) {\n      $('.field-block').filter($('div[class$=\\'_' + i + '\\']')).hide();\n    }\n    if (row === 4) {\n      $('.shortcake-columns-add-column').attr('disabled', 'disabled');\n    }\n\n    this.toggle_images();\n    this.add_click_event_handlers();\n  };\n\n  /**\n   * Add click event handlers for add/remove buttons in columns block.\n   */\n  me.add_click_event_handlers = function () {\n    var columns = this;\n    // Add click event handlers for the elements.\n    $('.shortcake-columns-add-column').on('click', function (event) {\n      event.preventDefault();\n      var $element = $(event.currentTarget);\n      var row = $element.parent().data('row');\n\n      if (row < 5) {\n        columns.show_column(++row);\n        $element.parent().data('row', row);\n        $('.shortcake-columns-remove-column').removeAttr('disabled');\n        if (row === 4) {\n          $element.attr('disabled', 'disabled');\n        }\n      }\n    });\n\n    $('.shortcake-columns-remove-column').on('click', function (event) {\n      event.preventDefault();\n      var $element = $(event.currentTarget);\n      var row = $element.parent().data('row');\n\n      if (row >= 0) {\n        columns.hide_column(row--);\n        $element.parent().data('row', row);\n        $('.shortcake-columns-add-column').removeAttr('disabled');\n        if (row === 0) {\n          $element.attr('disabled', 'disabled');\n        }\n      }\n    });\n\n    $('input[name=columns_block_style]').off('click').on('click', function() {\n      me.toggle_images();\n    });\n  };\n\n  /**\n   * Hide a columns block row and reset the values of it's fields.\n   *\n   * @param row\n   */\n  me.hide_column = function (row) {\n    var $column = $('.field-block').filter($('div[class$=\\'_' + row + '\\']'));\n    // Clear all text, textarea fields for this row/column.\n    $column.\n      children().\n      filter($('input, textarea')).each(function (index, element) {\n        $(element).val('').trigger('input');\n      });\n    // Clear image attachment if set in this row/column.\n    $column.\n      find($('.attachment-previews .remove')).each(function (index, element) {\n        $(element).click();\n      });\n    // Hide column's fields.\n    $column.hide(300);\n  };\n\n  /**\n   * Hide all columns block rows.\n   *\n   * @param row\n   */\n  me.hide_all_columns = function () {\n    [1,2,3,4].forEach(function (row) {\n      $( '.field-block' ).filter( $( 'div[class$=\\'_'+row+'\\']' ) ).hide();\n    });\n  };\n\n  /**\n   * Show a columns block row and scroll to bottom.\n   *\n   * @param row\n   */\n  me.show_column = function (row) {\n    $('.field-block').filter($('div[class$=\\'_' + row + '\\']')).show(300, function () {\n      me.toggle_images();\n      $('.media-frame-content').animate({\n        scrollTop: $('.shortcode-ui-content').prop('scrollHeight'),\n      }, 300);\n    });\n  };\n\n  /**\n   * Show/hide images inputs depending on column block style.\n   */\n  me.toggle_images = function() {\n    [1, 2, 3, 4].forEach(function(row) {\n      var column_is_visible = $('.field-block').filter($('div[class$=\\'title_' + row + '\\']')).is(':visible');\n      var block_style_allows_images = 'no_image' != $('input[name=columns_block_style]:checked').val();\n      $('.shortcode-ui-attribute-attachment_'+ row).toggle(column_is_visible && block_style_allows_images);\n    });\n  };\n}","/* global createCookie, readCookie */\n\nfunction CookiesBlock(p4BlocksUI) { // eslint-disable-line no-unused-vars\n  var me = this;\n\n  me.cookie = readCookie('greenpeace');\n\n  me.setNoTrackCookie = function() {\n    if ($('#necessary_cookies').is(':checked') || $('#all_cookies').is(':checked')) {\n      // Remove the 'no_track' cookie, if user accept the cookies consent.\n      createCookie('no_track', 'true', -1);\n    } else {\n      // If user manually disables all trackings, set a 'no_track' cookie.\n      createCookie('no_track', 'true', 20*365);\n    }\n  };\n\n  if ('1' === me.cookie) {\n    $('#necessary_cookies').prop('checked', true);\n  } else if ('2' === me.cookie) {\n    $('#necessary_cookies').prop('checked', true);\n    $('#all_cookies').prop('checked', true);\n  }\n\n  // Add change event for necessary cookies checkbox.\n  $('#necessary_cookies').on('change', function () {\n    if ($('#necessary_cookies').is(':checked')) {\n      createCookie('greenpeace', '1', 365);\n\n      // the .cookie-notice element belongs to the P4 Master Theme\n      $('.cookie-notice').slideUp('slow');\n    } else {\n      $('#all_cookies').prop('checked', false);\n      createCookie('greenpeace', '0', -1);\n      $('.cookie-notice').show();\n    }\n    me.setNoTrackCookie();\n  });\n\n  // Add change event for all cookies checkbox.\n  $('#all_cookies').on('change', function () {\n    if ($('#all_cookies').is(':checked')) {\n      $('#necessary_cookies').prop('checked', true);\n      createCookie('greenpeace', '2', 365);\n      $('.cookie-notice').slideUp('slow');\n    } else {\n      if ($('#necessary_cookies').is(':checked')) {\n        createCookie('greenpeace', '1', 365);\n      } else {\n        createCookie('greenpeace', '0', -1);\n        $('.cookie-notice').show();\n      }\n    }\n    me.setNoTrackCookie();\n  });\n}","function GalleryBlock(p4BlocksUI) { // eslint-disable-line no-unused-vars\n  var me = this;\n\n  /**\n   * Post types select box change hook.\n   */\n  me.gallery_image_change_hook = function ( changed, collection, shortcode ) { // eslint-disable-line no-unused-vars\n\n    // Prepend Protocol to URL if user has not provided it.\n    let models = shortcode.attributes.attrs.models;\n\n    models.forEach(function (model) {\n      let attr_name = model.get('attr');\n\n      if ( 'gallery_block_focus_points' == attr_name ) {\n        let $element  = $('input[name=\"' + attr_name + '\"]');\n\n        // Sample data set to model.\n        model.set('value', '1000:T,1002:B,1003:M');\n        $element.val('1000:T,1002:B,1003:M');\n\n        console.log(attr_name+'  '+$element.val());  // eslint-disable-line no-console\n\n      }\n    });\n\n    var updatedVal = changed.value;\n    updatedVal.forEach(function (imageId) {\n      console.log('Image id='+imageId);  // eslint-disable-line no-console\n\n      $('.shortcake-attachment-preview').append('<div id=\"focus_point'+imageId+'\"></div>');\n\n      // Here I want to append the focus point field to attachement preview.\n    });\n\n  };\n}\n","// Define hook functions for newcovers block fields to be used when creating/editing a newcovers block.\nfunction NewCoversBlock(p4BlocksUI) { // eslint-disable-line no-unused-vars\n  var me = this;\n\n  /**\n   * Cover type field change hook.\n   */\n  me.type_of_cover_change_hook = function () {\n    var cover_type = $('input[name=cover_type]:checked').val();\n    if ('undefined' === cover_type) {\n      return;\n    }\n\n    if ('1' === cover_type) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n    } else if ('2' === cover_type) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n    } else if ('3' === cover_type) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n    }\n  };\n\n  /**\n   * Disable/enable fields of a newcovers block when rendering a preexisting newcovers block.\n   */\n  me.initialize_view_fields = function () {\n    var cover_type = $('input[name=cover_type]:checked').val();\n    var posts = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    var tags = $('select[id^=\\'shortcode-ui-tags\\']').val();\n    var post_types = $('select[id^=\\'shortcode-ui-post_types\\']').val();\n    if ('undefined' === cover_type) {\n      return;\n    }\n\n    if ('1' === cover_type) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change');\n\n      if (null !== tags || null !== post_types) {\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      }\n      if (null !== posts) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n      }\n    } else if ('2' === cover_type) {\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n    } else if ('3' === cover_type) {\n      if (null !== tags || null !== post_types) {\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      }\n      if (null !== posts) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change');\n      }\n    }\n  };\n\n  /**\n   * Post types select box change hook.\n   */\n  me.post_types_change_hook = function () {\n    var cover_type = $('input[name=cover_type]:checked').val();\n    var tags = $('select[id^=\\'shortcode-ui-tags\\']').val();\n    var post_types = $('select[id^=\\'shortcode-ui-post_types\\']').val();\n    var posts = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    if ('undefined' === cover_type) {\n      return;\n    }\n\n    if ('3' === cover_type) {\n      if (null !== post_types) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n\n      } else if (null === tags && null === posts && null === post_types) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n      }\n    }\n  };\n\n  /**\n   * Post select box change hook.\n   */\n  me.posts_select_change_hook = function () {\n    var cover_type = $('input[name=cover_type]:checked').val();\n    var posts = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    if ('undefined' === cover_type) {\n      return;\n    }\n\n    if (posts !== null) {\n      if ('1' === cover_type) {\n        $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n      } else if ('3' === cover_type) {\n        $('select[id^=\\'shortcode-ui-tags\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      }\n    } else {\n      if ('1' === cover_type) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n      } else if ('3' === cover_type) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n      }\n    }\n  };\n\n  /**\n   * Tags select box change hook.\n   */\n  me.tags_change_hook = function () {\n    var cover_type = $('input[name=cover_type]:checked').val();\n    var posts = $('select[id^=\\'shortcode-ui-posts\\']').val();\n    var tags = $('select[id^=\\'shortcode-ui-tags\\']').val();\n    var post_types = $('select[id^=\\'shortcode-ui-post_types\\']').val();\n    if ('undefined' === cover_type) {\n      return;\n    }\n\n    if ('1' === cover_type) {\n      if (null !== tags || null !== post_types) {\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n        $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n      } else if (null === tags && null === posts) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n      }\n    } else if ('2' === cover_type) {\n      $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n      $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n      $('select[id^=\\'shortcode-ui-post_types\\']').val(null).trigger('change');\n      $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', 'disabled');\n    } else if ('3' === cover_type) {\n      if (null !== tags) {\n        $('select[id^=\\'shortcode-ui-tags\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-post_types\\']').prop('disabled', false);\n        $('select[id^=\\'shortcode-ui-posts\\']').val(null).trigger('change');\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', 'disabled');\n\n      } else if (null === tags && null === posts && null === post_types) {\n        $('select[id^=\\'shortcode-ui-posts\\']').prop('disabled', false);\n      }\n    }\n  };\n}","function SocialMediaBlock(p4BlocksUI) { // eslint-disable-line no-unused-vars\n  var me = this;\n\n  me.initialize_fields = function () {\n    me.set_default_embed_type();\n    me.toggle_facebook_page_options();\n  };\n\n  me.embed_type_change_hook = function () {\n    me.toggle_facebook_page_options();\n  };\n\n  /**\n   * If no value, default to oembed\n   */\n  me.set_default_embed_type = function () {\n    if (!$('input[name=embed_type]:checked').val()) {\n      $('input[name=embed_type][value=oembed]').prop('checked', true);\n    }\n  };\n\n  /**\n   * Show/hide Facebook page options according to embed_type\n   */\n  me.toggle_facebook_page_options = function () {\n    var $facebook_page_options = $('.shortcode-ui-attribute-facebook_page_tab');\n    var embed_type = $('input[name=embed_type]:checked').val();\n\n    if ('facebook_page' === embed_type) {\n      $facebook_page_options.show();\n    } else {\n      $facebook_page_options.hide();\n    }\n  };\n}","/* global _, sui, wp */\nfunction SubmenuBlock(p4BlocksUI) { // eslint-disable-line no-unused-vars\n  var me = this;\n\n  me.editAttributeHeading = sui.views.editAttributeField.extend({\n    tagName: 'span',\n    className: 'block-attribute-wrapper',\n    events: {\n      'input  input': 'inputChanged',\n      'input  textarea': 'inputChanged',\n      'change select': 'inputChanged',\n      'change input[type=\"radio\"]': 'inputChanged',\n      'change input[type=\"checkbox\"]': 'inputChanged'\n    },\n\n    inputChanged: function (e) {\n      var $el;\n\n      if (this.model.get('attr')) {\n        $el = this.$el.find('[name=\"' + this.model.get('attr') + '\"]');\n      }\n\n      if ('radio' === this.model.attributes.type || 'p4_radio' === this.model.attributes.type) {\n        this.setValue($el.filter(':checked').first().val());\n      } else if ('checkbox' === this.model.attributes.type || 'p4_checkbox' === this.model.attributes.type) {\n        this.setValue($el.is(':checked'));\n      } else if ('range' === this.model.attributes.type) {\n        var rangeId = '#' + e.target.id + '_indicator';\n        var rangeValue = e.target.value;\n        document.querySelector(rangeId).value = rangeValue;\n        this.setValue($el.val());\n      } else {\n        this.setValue($el.val());\n      }\n\n      this.triggerCallbacks();\n    },\n\n    setValue: function (val) {\n      this.model.set('value', val);\n    },\n\n    triggerCallbacks: function () {\n      var shortcodeName = this.shortcode.attributes.shortcode_tag,\n        attributeName = this.model.get('attr'),\n        hookName = [shortcodeName, attributeName].join('.'),\n        changed = this.model.changed,\n        collection = _.flatten(_.values(this.views.parent.views._views)),\n        shortcode = this.shortcode;\n\n      /*\n      * Action run when an attribute value changes on a shortcode\n      *\n      * Called as `{shortcodeName}.{attributeName}`.\n      *\n      * @param changed (object)\n      *           The update, ie. { \"changed\": \"newValue\" }\n      * @param viewModels (array)\n      *           The collections of views (editAttributeFields)\n      *                         which make up this shortcode UI form\n      * @param shortcode (object)\n      *           Reference to the shortcode model which this attribute belongs to.\n      */\n      wp.shortcake.hooks.doAction(hookName, changed, collection, shortcode);\n    }\n  });\n\n  sui.views.editAttributeHeading = me.editAttributeHeading;\n}","/*\n  global $,\n    _,\n    Select2FieldsSetup,\n    P4FieldsSetup,\n    WPShortcakeHooksSetup,\n    ArticlesBlock,\n    ColumnsBlock,\n    NewCoversBlock,\n    CarouselHeaderBlock,\n    SocialMediaBlock,\n    SubmenuBlock,\n    GalleryBlock\n*/\n\n// Define a p4_blocks object that holds functions used during rendering backend blocks' views.\nfunction P4BlocksAdminUI(Select2FieldsSetup, P4FieldsSetup, WPShortcakeHooksSetup, blocksMap) {\n  var me = this;\n\n  me.hooks_defined = false;\n\n  me.setupSelect2Fields = Select2FieldsSetup;\n  me.setupP4Fields = P4FieldsSetup;\n  me.setupWPShortcakeHooks = WPShortcakeHooksSetup;\n  me.blocksMap = blocksMap;\n\n  me.blocks = {};\n\n  me.initialize_view_fields = function (block_name) {\n    switch (block_name) {\n    case 'articles':\n      me.blocks['ArticlesBlock'].initialize_view_fields();\n      break;\n    case 'newcovers':\n      me.blocks['NewCoversBlock'].initialize_view_fields();\n      break;\n    }\n  };\n\n  me.find_view = function (collection, name) {\n    return _.find(\n      collection,\n      function (viewModel) {\n        return name === viewModel.model.get('attr');\n      }\n    );\n  };\n\n  /**\n   * Call a block's constructor and inject this class down.\n   */\n  me.setupBlock = function(blockClass) {\n    me.blocks[blockClass] = new me.blocksMap[blockClass](me);\n  };\n\n  /**\n   * Initialize common components\n   */\n  me.setup = function() {\n    me.setupSelect2Fields();\n    me.setupP4Fields();\n    me.setupWPShortcakeHooks(me);\n\n    for (var block in me.blocksMap) {\n      me.setupBlock(block);\n    }\n  };\n}\n\njQuery(function () {\n  'use strict';\n\n  var blocksMap = {\n    'ArticlesBlock'       : ArticlesBlock,\n    'CarouselHeaderBlock' : CarouselHeaderBlock,\n    'ColumnsBlock'        : ColumnsBlock,\n    'NewCoversBlock'      : NewCoversBlock,\n    'SocialMediaBlock'    : SocialMediaBlock,\n    'SubmenuBlock'        : SubmenuBlock,\n    'GalleryBlock'        : GalleryBlock\n  };\n\n  var p4BlocksUI = new P4BlocksAdminUI(Select2FieldsSetup, P4FieldsSetup, WPShortcakeHooksSetup, blocksMap);\n  p4BlocksUI.setup();\n});\n"]}