{"version":3,"sources":["admin.js","blocks-ui.js","cookies.js","submenu.js","submenu_heading_view.js"],"names":["jQuery","document","ready","$","animate","margin-left","opacity","setTimeout","fadeOut","this","remove","sui","views","editAttributeSelect2Field","prototype","preselect","$field","_preselected","String","getValue","length","request","include","shortcode","get","attr","model","ajaxData","action","ajaxurl","extend","response","_","each","data","items","item","id","text","prop","appendTo","render","self","defaults","multiple","arg","set","toJSON","cid","$el","html","template","find","selector","undefined","requests","Array","isArray","push","select2_options","default_options","dropdownParent","allowClear","ajax","url","dataType","delay","params","type","val","s","term","page","processResults","success","results","pagination","more","items_per_page","found_items","cache","escapeMarkup","markup","minimumInputLength","templateResult","templateSelection","soptions","Object","assign","that","defer","shortcodeUIData","select2_handle","sortable","wp","shortcodeUIFieldData","p4_select","encode","view","p4_checkbox","p4_radio","addTags","parent","before","shortcake","hooks","addAction","p4_blocks","hooks_defined","initialize_view_fields","block_name","articles","newcovers","find_view","collection","name","viewModel","type_of_cover_change_hook","cover_type","trigger","posts","tags","post_types","post_types_change_hook","posts_select_change_hook","tags_change_hook","page_types_change_hook","posts_value","read_more_change_hook","changed","value","test","encodeURI","social_media","initialize_fields","set_default_embed_type","toggle_facebook_page_options","embed_type_change_hook","$facebook_page_options","show","hide","columns","render_new","append","hide_all_columns","add_click_event_handlers","render_edit","row","forEach","index","filter","children","map","idx","elem","join","i","toggle_images","on","event","preventDefault","$element","currentTarget","show_column","removeAttr","hide_column","off","$column","element","click","scrollTop","column_is_visible","is","block_style_allows_images","toggle","carousel_header","toggle_subheaders","set_maxlength","selected_block_style","closest","add_maxlength_with_counter","maxLength","next","insertAfter","charCount","me","attach_hooks","shortcode_tag","replace","includes","$block_div","addClass","prev","prepend","Promise","all","then","values","removeClass","unset","setNoTrackCookie","createCookie","cookie","readCookie","slideUp","submenu","menu","link","$headings","j","$heading","k","child","child_type","$headings2","l","$heading2","offset","top","position","window","location","hash","editAttributeHeading","editAttributeField","tagName","className","events","input  input","input  textarea","change select","change input[type=\"radio\"]","change input[type=\"checkbox\"]","inputChanged","e","attributes","setValue","first","rangeId","target","rangeValue","querySelector","triggerCallbacks","hookName","flatten","_views","doAction"],"mappings":"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","file":"../main.js","sourcesContent":["jQuery(document).ready(function() {\n\n    $('.notice.is-dismissible').animate({\"margin-left\" : '+=20', \"opacity\" : '+=0.9'}, 800);\n\n    setTimeout(function() {\n        $('.notice.is-dismissible').fadeOut(2000, function () {\n            $(this).remove();\n        });\n    }, 3800);\n} );","// Override shortcake's editAttributeSelect2Field backbone view to manipulate select2 instance.\n// Modified versions of render and preselect functions of that view.\nif ('undefined' !== sui.views) {\n\n  /**\n   * Load the values to be preselected before initializing field\n   *\n   * @param $field jQuery object reference to the <select> field\n   * @param object ajaxData object containing ajax action, nonce, and shortcode & model data\n   * @param string includeField how to specify the current selection, ie 'post__in'\n   */\n  sui.views.editAttributeSelect2Field.prototype.preselect = function ($field) {\n    var _preselected = String(this.getValue());\n\n    if (_preselected.length) {\n      var request = {\n        include: _preselected,\n        shortcode: this.shortcode.get('shortcode_tag'),\n        attr: this.model.get('attr')\n      };\n\n      if ('shortcake_newcovers' === this.shortcode.get('shortcode_tag') && 'posts' === this.model.get('attr')) {\n        this.ajaxData.action = 'planet4_blocks_post_field';\n      }\n      return $.get(ajaxurl, $.extend(request, this.ajaxData),\n        function (response) {\n          _.each(response.data.items, function (item) {\n            $('<option>')\n              .attr('value', item.id)\n              .text(item.text)\n              .prop('selected', 'selected')\n              .appendTo($field);\n          });\n        }\n      );\n    }\n    return null;\n  };\n\n  /**\n   * Abstract field for all ajax Select2-powered field views\n   *\n   * Adds useful helpers that are shared between all of the fields which use\n   * Select2 as their UI.\n   *\n   */\n  sui.views.editAttributeSelect2Field.prototype.render = function () {\n    var self = this,\n      defaults = {multiple: false};\n\n    for (var arg in defaults) {\n      if (!this.model.get(arg)) {\n        this.model.set(arg, defaults[arg]);\n      }\n    }\n\n    var data = this.model.toJSON();\n    data.id = 'shortcode-ui-' + this.model.get('attr') + '-' + this.model.cid;\n\n    this.$el.html(this.template(data));\n\n    var $field = this.$el.find(this.selector);\n\n    if (this.shortcode.get('ajax_requests') === undefined) {\n      this.shortcode.set('ajax_requests', []);\n    }\n    var request = this.preselect($field);\n    if (null !== request) {\n      var requests = this.shortcode.get('ajax_requests');\n      if (Array.isArray(requests)) {\n        requests.push(request);\n        this.shortcode.set('ajax_requests', requests);\n      }\n    }\n\n    var select2_options = this.model.get('meta').select2_options;\n\n    var default_options = {\n      multiple: this.model.get('multiple'),\n      dropdownParent: this.$el,\n      allowClear: true,\n\n      ajax: {\n        url: ajaxurl,\n        dataType: 'json',\n        delay: 250,\n        data: function (params) {\n          // Overriding ajax data function for specific shortcode attribute ('shortcake_newcovers' - 'posts')\n          if ('shortcake_newcovers' === self.shortcode.get('shortcode_tag') && 'posts' === self.model.get('attr')) {\n            self.ajaxData.action = 'planet4_blocks_post_field';\n            return $.extend({\n              type: function () {\n                return $('input[name=cover_type]:checked').val()\n              },\n              s: params.term, // search term\n              page: params.page,\n              shortcode: self.shortcode.get('shortcode_tag'),\n              attr: self.model.get('attr'),\n              action: 'wp_ajax_planet4_blocks_post_field'\n            }, self.ajaxData);\n          } else {\n            return $.extend({\n              s: params.term, // search term\n              page: params.page,\n              shortcode: self.shortcode.get('shortcode_tag'),\n              attr: self.model.get('attr'),\n            }, self.ajaxData);\n          }\n        },\n        processResults: function (response, params) {\n          var data = response.data;\n          params.page = params.page || 1;\n          if (!response.success || 'undefined' === typeof response.data) {\n            return {results: []};\n          }\n          return {\n            results: data.items,\n            pagination: {\n              more: (params.page * data.items_per_page) < data.found_items\n            }\n          };\n        },\n        cache: true\n      },\n\n      escapeMarkup: function (markup) {\n        return markup;\n      },\n      minimumInputLength: 0,\n      templateResult: this.templateResult,\n      templateSelection: this.templateSelection,\n    };\n\n    var soptions = Object.assign({}, default_options, select2_options);\n\n    var that = this;\n    _.defer(function () {\n      var $fieldSelect2 = $field[shortcodeUIData.select2_handle](soptions);\n      if (that.model.get('multiple')) {\n        that.sortable($field);\n      }\n    }, that, $field);\n\n    return this;\n  };\n}\n\n\njQuery(function ($) {\n  'use strict';\n\n  if ('undefined' !== typeof (wp.shortcake)) {\n\n    shortcodeUIFieldData.p4_select = {\n      encode: false,\n      template: \"shortcode-ui-field-p4-select\",\n      view: \"editAttributeHeading\"\n    };\n    shortcodeUIFieldData.p4_checkbox = {\n      encode: false,\n      template: \"shortcode-ui-field-p4-checkbox\",\n      view: \"editAttributeHeading\"\n    };\n    shortcodeUIFieldData.p4_radio = {\n      encode: false,\n      template: \"shortcode-ui-field-p4-radio\",\n      view: \"editAttributeHeading\"\n    };\n\n    // break submenu attribute groups into rows\n    var addTags = function () {\n      $(\".shortcode-ui-attribute-heading2\").parent().before('<p></p>');\n      $(\".shortcode-ui-attribute-heading3\").parent().before('<p></p>');\n    }\n    wp.shortcake.hooks.addAction('shortcode-ui.render_edit', addTags);\n    wp.shortcake.hooks.addAction('shortcode-ui.render_new', addTags);\n  }\n});\n\n// Define a p4_blocks object that holds functions used during rendering backend blocks' views.\nvar p4_blocks = {\n\n  hooks_defined: false,\n\n  initialize_view_fields: function (block_name) {\n    switch (block_name) {\n      case 'articles':\n        p4_blocks.articles.initialize_view_fields();\n        break;\n      case 'newcovers':\n        p4_blocks.newcovers.initialize_view_fields();\n        break;\n    }\n  },\n\n  find_view: function (collection, name) {\n    return _.find(\n      collection,\n      function (viewModel) {\n        return name === viewModel.model.get('attr');\n      }\n    );\n  },\n\n  // Define hook functions for newcovers block fields to be used when creating/editing a newcovers block.\n  newcovers: {\n    /**\n     * Cover type field change hook.\n     */\n    type_of_cover_change_hook: function () {\n\n      var cover_type = $('input[name=cover_type]:checked').val();\n      if ('undefined' === cover_type) {\n        return;\n      }\n\n      if ('1' === cover_type) {\n        $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', 'disabled');\n        $(\"select[id^='shortcode-ui-posts']\").prop('disabled', false);\n        $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change');\n        $(\"select[id^='shortcode-ui-tags']\").val(null).trigger('change');\n      } else if ('2' === cover_type) {\n        $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', 'disabled');\n        $(\"select[id^='shortcode-ui-posts']\").prop('disabled', 'disabled');\n        $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change');\n        $(\"select[id^='shortcode-ui-tags']\").val(null).trigger('change');\n      } else if ('3' === cover_type) {\n        $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', false);\n        $(\"select[id^='shortcode-ui-posts']\").prop('disabled', false);\n        $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change');\n        $(\"select[id^='shortcode-ui-tags']\").val(null).trigger('change');\n      }\n    },\n\n\n    /**\n     * Disable/enable fields of a newcovers block when rendering a preexisting newcovers block.\n     */\n    initialize_view_fields: function () {\n\n      var cover_type = $('input[name=cover_type]:checked').val();\n      var posts = $(\"select[id^='shortcode-ui-posts']\").val();\n      var tags = $(\"select[id^='shortcode-ui-tags']\").val();\n      var post_types = $(\"select[id^='shortcode-ui-post_types']\").val();\n      if ('undefined' === cover_type) {\n        return;\n      }\n\n      if ('1' === cover_type) {\n        $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', 'disabled');\n        $(\"select[id^='shortcode-ui-post_types']\").val(null).trigger('change');\n\n        if (null !== tags || null !== post_types) {\n          $(\"select[id^='shortcode-ui-posts']\").prop('disabled', 'disabled');\n          $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change');\n        }\n        if (null !== posts) {\n          $(\"select[id^='shortcode-ui-tags']\").prop('disabled', 'disabled');\n          $(\"select[id^='shortcode-ui-tags']\").val(null).trigger('change');\n        }\n      } else if ('2' === cover_type) {\n        $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', 'disabled');\n        $(\"select[id^='shortcode-ui-post_types']\").val(null).trigger('change');\n        $(\"select[id^='shortcode-ui-posts']\").prop('disabled', 'disabled');\n        $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change');\n      } else if ('3' === cover_type) {\n        if (null !== tags || null !== post_types) {\n          $(\"select[id^='shortcode-ui-posts']\").prop('disabled', 'disabled');\n          $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change');\n        }\n        if (null !== posts) {\n          $(\"select[id^='shortcode-ui-tags']\").prop('disabled', 'disabled');\n          $(\"select[id^='shortcode-ui-tags']\").val(null).trigger('change');\n          $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', 'disabled');\n          $(\"select[id^='shortcode-ui-post_types']\").val(null).trigger('change');\n        }\n      }\n    },\n\n    /**\n     * Post types select box change hook.\n     */\n    post_types_change_hook: function () {\n\n      var cover_type = $('input[name=cover_type]:checked').val();\n      var tags = $(\"select[id^='shortcode-ui-tags']\").val();\n      var post_types = $(\"select[id^='shortcode-ui-post_types']\").val();\n      var posts = $(\"select[id^='shortcode-ui-posts']\").val();\n      if ('undefined' === cover_type) {\n        return;\n      }\n\n      if ('3' === cover_type) {\n        if (null !== post_types) {\n          $(\"select[id^='shortcode-ui-tags']\").prop('disabled', false);\n          $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', false);\n          $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change');\n          $(\"select[id^='shortcode-ui-posts']\").prop('disabled', 'disabled');\n\n        } else if (null === tags && null === posts && null === post_types) {\n          $(\"select[id^='shortcode-ui-tags']\").prop('disabled', false);\n          $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', false);\n          $(\"select[id^='shortcode-ui-posts']\").prop('disabled', false);\n        }\n      }\n\n    },\n\n    /**\n     * Post select box change hook.\n     */\n    posts_select_change_hook: function () {\n\n      var cover_type = $('input[name=cover_type]:checked').val();\n      var posts = $(\"select[id^='shortcode-ui-posts']\").val();\n      if ('undefined' === cover_type) {\n        return;\n      }\n\n      if (posts !== null) {\n        if ('1' === cover_type) {\n          $(\"select[id^='shortcode-ui-tags']\").val(null).trigger('change');\n          $(\"select[id^='shortcode-ui-tags']\").prop('disabled', 'disabled');\n        } else if ('3' === cover_type) {\n          $(\"select[id^='shortcode-ui-tags']\").val(null).trigger('change');\n          $(\"select[id^='shortcode-ui-tags']\").prop('disabled', 'disabled');\n          $(\"select[id^='shortcode-ui-post_types']\").val(null).trigger('change');\n          $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', 'disabled');\n        }\n      } else {\n        if ('1' === cover_type) {\n          $(\"select[id^='shortcode-ui-tags']\").prop('disabled', false);\n        } else if ('3' === cover_type) {\n          $(\"select[id^='shortcode-ui-tags']\").prop('disabled', false);\n          $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', false);\n        }\n      }\n    },\n\n    /**\n     * Tags select box change hook.\n     */\n    tags_change_hook: function () {\n\n      var cover_type = $('input[name=cover_type]:checked').val();\n      var posts = $(\"select[id^='shortcode-ui-posts']\").val();\n      var tags = $(\"select[id^='shortcode-ui-tags']\").val();\n      var post_types = $(\"select[id^='shortcode-ui-post_types']\").val();\n      if ('undefined' === cover_type) {\n        return;\n      }\n\n      if ('1' === cover_type) {\n        if (null !== tags || null !== post_types) {\n          $(\"select[id^='shortcode-ui-posts']\").prop('disabled', 'disabled');\n          $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change');\n          $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', 'disabled');\n        } else if (null === tags && null === posts) {\n          $(\"select[id^='shortcode-ui-tags']\").prop('disabled', false);\n          $(\"select[id^='shortcode-ui-posts']\").prop('disabled', false);\n        }\n      } else if ('2' === cover_type) {\n        $(\"select[id^='shortcode-ui-posts']\").prop('disabled', 'disabled');\n        $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change');\n        $(\"select[id^='shortcode-ui-tags']\").prop('disabled', false);\n        $(\"select[id^='shortcode-ui-post_types']\").val(null).trigger('change');\n        $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', 'disabled');\n      } else if ('3' === cover_type) {\n        if (null !== tags) {\n          $(\"select[id^='shortcode-ui-tags']\").prop('disabled', false);\n          $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', false);\n          $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change');\n          $(\"select[id^='shortcode-ui-posts']\").prop('disabled', 'disabled');\n\n        } else if (null === tags && null === posts && null === post_types) {\n          $(\"select[id^='shortcode-ui-posts']\").prop('disabled', false);\n        }\n      }\n    },\n\n  },\n\n  // Define hook functions for articles block fields to be used when creating/editing an articles block.\n  articles: {\n    /**\n     * Disable/Enable posts select box based on post types and tags select boxes.\n     */\n    page_types_change_hook: function () {\n\n      var posts_value = $(\"select[id^='shortcode-ui-post_types']\").val();\n      var tags = $(\"select[id^='shortcode-ui-tags']\").val();\n      if (null === posts_value && null === tags) {\n        $(\"select[id^='shortcode-ui-posts']\").prop('disabled', false);\n      } else {\n        $(\"select[id^='shortcode-ui-posts']\").val(null).trigger('change.select2');\n        $(\"select[id^='shortcode-ui-posts']\").prop('disabled', 'disabled');\n      }\n    },\n\n    /**\n     * Disable/Enable p4 page types checkboxes based on posts select box value.\n     */\n    posts_select_change_hook: function () {\n\n      var posts_value = $(\"select[id^='shortcode-ui-posts']\").val();\n      if (null === posts_value) {\n        $(\"select[id^='shortcode-ui-tags']\").prop('disabled', false);\n        $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', false);\n        $(\"input[name^='ignore_categories']\").prop('disabled', false);\n      } else {\n        $(\"select[id^='shortcode-ui-post_types']\").val(null).trigger('change.select2');\n        $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', 'disabled');\n        $(\"select[id^='shortcode-ui-tags']\").val(null).trigger('change.select2');\n        $(\"select[id^='shortcode-ui-tags']\").prop('disabled', 'disabled');\n        $(\"input[name^='ignore_categories']\").prop('disabled', 'disabled');\n      }\n    },\n\n    read_more_change_hook: function (changed, collection, shortcode) {\n\n      var view = p4_blocks.find_view(collection, 'read_more_link');\n      if ('undefined' !== view) {\n        if (typeof changed.value !== 'undefined') {\n          var url    = '';\n          var format = /%[0-9a-f]/i;\n          if ( format.test( changed.value ) ) {\n            url = changed.value;\n          } else {\n            url = encodeURI(changed.value);\n          }\n          if ('undefined' !== url) {\n            view.model.set('value', url);\n            $(\"*[id^='shortcode-ui-read_more_link-']\").val(url);\n          }\n        }\n      }\n    },\n\n    /**\n     * Disable/enable fields of an articles block when rendering a preexisting articles block.\n     */\n    initialize_view_fields: function () {\n\n      var posts = $(\"select[id^='shortcode-ui-posts']\").val();\n      var tags = $(\"select[id^='shortcode-ui-tags']\").val();\n      var post_types = $(\"select[id^='shortcode-ui-post_types']\").val();\n\n      if (null !== posts) {\n        $(\"select[id^='shortcode-ui-post_types']\").prop('disabled', 'disabled');\n        $(\"select[id^='shortcode-ui-tags']\").prop('disabled', 'disabled');\n\n      } else {\n        if (null !== tags || null !== post_types) {\n          $(\"select[id^='shortcode-ui-posts']\").prop('disabled', 'disabled');\n        }\n      }\n    }\n  },\n\n  social_media: {\n    initialize_fields: function () {\n      p4_blocks.social_media.set_default_embed_type();\n      p4_blocks.social_media.toggle_facebook_page_options();\n    },\n\n    embed_type_change_hook: function () {\n      p4_blocks.social_media.toggle_facebook_page_options();\n    },\n\n    /**\n     * If no value, default to oembed\n     */\n    set_default_embed_type: function () {\n      if (!$('input[name=embed_type]:checked').val()) {\n        $('input[name=embed_type][value=oembed]').prop('checked', true);\n      }\n    },\n\n    /**\n     * Show/hide Facebook page options according to embed_type\n     */\n    toggle_facebook_page_options: function () {\n      var $facebook_page_options = $('.shortcode-ui-attribute-facebook_page_tab');\n      var embed_type = $('input[name=embed_type]:checked').val();\n\n      if ('facebook_page' === embed_type) {\n        $facebook_page_options.show();\n      } else {\n        $facebook_page_options.hide();\n      }\n    }\n  },\n\n  columns: {\n\n    /**\n     * Called when a new columns block is rendered in the backend.\n\n     * @param shortcode Shortcake backbone model.\n     */\n    render_new: function (shortcode) {\n\n      var $shortcode_div = $('.shortcode-ui-edit-shortcake_columns');\n      $shortcode_div.append('<div data-row=\"0\"><button class=\"button button-small shortcake-columns-add-column\">Add Column</button>'\n        + '<button class=\"button button-small shortcake-columns-remove-column\" disabled=\"disabled\">Remove Column</button></div>');\n      this.hide_all_columns();\n\n      this.add_click_event_handlers();\n    },\n\n    /**\n     * Called when en existing columns block is rendered in the backend.\n\n     * @param shortcode Shortcake backbone model.\n     */\n    render_edit: function (shortcode) {\n\n      var $shortcode_div = $('.shortcode-ui-edit-shortcake_columns');\n      $shortcode_div.append('<div data-row=\"0\"><button class=\"button button-small shortcake-columns-add-column\" data-row=\"1 data-action=\"add\">Add Column</button>'\n        + '<button class=\"button button-small shortcake-columns-remove-column\">Remove Column</button></div>');\n      var row = 0;\n\n      [1, 2, 3, 4].forEach(function (index) {\n        var input_values = $('.field-block').filter($('div[class$=\\'_' + index + '\\']')).children().filter($('input, textarea')).map(function (idx, elem) {\n          return $(elem).val();\n        }).get().join('');\n\n        if ('' !== input_values) {\n          row = index;\n        }\n      });\n\n      $('.shortcake-columns-add-column').parent().data('row', row);\n      for (var i = row+1; i <= 4; i++) {\n        $('.field-block').filter($('div[class$=\\'_' + i + '\\']')).hide();\n      }\n      if (row === 4) {\n        $('.shortcake-columns-add-column').attr('disabled', 'disabled');\n      }\n\n      this.toggle_images();\n      this.add_click_event_handlers();\n    },\n\n    /**\n     * Add click event handlers for add/remove buttons in columns block.\n     */\n    add_click_event_handlers: function () {\n\n      var columns = this;\n      // Add click event handlers for the elements.\n      $('.shortcake-columns-add-column').on('click', function (event) {\n        event.preventDefault();\n        var $element = $(event.currentTarget);\n        var row = $element.parent().data('row');\n\n        if (row < 5) {\n          columns.show_column(++row);\n          $element.parent().data('row', row);\n          $('.shortcake-columns-remove-column').removeAttr('disabled');\n          if (row === 4) {\n            $element.attr('disabled', 'disabled');\n          }\n        }\n      });\n\n      $('.shortcake-columns-remove-column').on('click', function (event) {\n        event.preventDefault();\n        var $element = $(event.currentTarget);\n        var row = $element.parent().data('row');\n\n        if (row >= 0) {\n          columns.hide_column(row--);\n          $element.parent().data('row', row);\n          $('.shortcake-columns-add-column').removeAttr('disabled');\n          if (row === 0) {\n            $element.attr('disabled', 'disabled');\n          }\n        }\n      });\n\n      $('input[name=columns_block_style]').off('click').on('click', function() {\n        p4_blocks.columns.toggle_images();\n      });\n    },\n\n    /**\n     * Hide a columns block row and reset the values of it's fields.\n     *\n     * @param row\n     */\n    hide_column: function (row) {\n      var $column = $('.field-block').filter($('div[class$=\\'_' + row + '\\']'));\n      // Clear all text, textarea fields for this row/column.\n      $column.\n        children().\n        filter($('input, textarea')).each(function (index, element) {\n          $(element).val('').trigger('input');\n        });\n      // Clear image attachment if set in this row/column.\n      $column.\n        find($('.attachment-previews .remove')).each(function (index, element) {\n          $(element).click();\n        });\n      // Hide column's fields.\n      $column.hide(300);\n    },\n\n    /**\n     * Hide all columns block rows.\n     *\n     * @param row\n     */\n    hide_all_columns: function () {\n      [1,2,3,4].forEach(function (row) {\n        $( '.field-block' ).filter( $( 'div[class$=\\'_'+row+'\\']' ) ).hide();\n      });\n    },\n\n    /**\n     * Show a columns block row and scroll to bottom.\n     *\n     * @param row\n     */\n    show_column: function (row) {\n      $('.field-block').filter($('div[class$=\\'_' + row + '\\']')).show(300, function () {\n        p4_blocks.columns.toggle_images();\n        $('.media-frame-content').animate({\n          scrollTop: $('.shortcode-ui-content').prop('scrollHeight'),\n        }, 300);\n      });\n    },\n\n    /**\n     * Show/hide images inputs depending on column block style.\n     */\n    toggle_images: function() {\n      [1, 2, 3, 4].forEach(function(row) {\n        var column_is_visible = $('.field-block').filter($('div[class$=\\'title_' + row + '\\']')).is(':visible');\n        var block_style_allows_images = 'no_image' != $('input[name=columns_block_style]:checked').val();\n        $('.shortcode-ui-attribute-attachment_'+ row).toggle(column_is_visible && block_style_allows_images);\n      });\n    }\n  },\n\n  carousel_header: {\n    render_edit: function () {\n      p4_blocks.carousel_header.toggle_subheaders();\n      p4_blocks.carousel_header.set_maxlength();\n\n      $('input[name=block_style]').off('click').on('click', function() {\n        p4_blocks.carousel_header.toggle_subheaders();\n        p4_blocks.carousel_header.set_maxlength();\n      });\n    },\n\n    toggle_subheaders: function() {\n      var selected_block_style = $('input[name=block_style]:checked').val();\n      $('input[data-subheader=true]').closest('.field-block').toggle('full-width-classic' != selected_block_style);\n    },\n\n    add_maxlength_with_counter: function(element, maxLength) {\n      $(element).attr('maxlength', maxLength);\n      if (!$(element).next('div').length) {\n        var maxLengthCounter = '<div class=\"max-length-counter\">0/' + maxLength + '</div>';\n        $(maxLengthCounter).insertAfter(element);\n      }\n      $(element).off('input').on('input', function() {\n        var charCount = $(element).val().length;\n        $(element).next('div.max-length-counter').html(charCount + '/' + maxLength);\n      });\n    },\n\n    set_maxlength: function() {\n      var me = this;\n      var selected_block_style = $('input[name=block_style]:checked').val();\n\n      if (selected_block_style == 'full-width-classic') {\n        $('input[name^=\\'header_\\']').each(function() {\n          me.add_maxlength_with_counter(this, 32);\n        });\n        $('textarea[name^=\\'description_\\']').each(function() {\n          me.add_maxlength_with_counter(this, 200);\n        });\n        $('input[name^=\\'link_text_\\']').each(function() {\n          me.add_maxlength_with_counter(this, 24);\n        })\n      } else {\n        $('input[name^=\\'header_\\']').attr('maxlength', 40);\n        $('textarea[name^=\\'description_\\']').removeAttr('maxlength');\n        $('input[name^=\\'link_text_\\']').removeAttr('maxlength');\n        $('div.maxLengthCounter').remove();\n      }\n    }\n  }\n};\n\n// Define shortcake hooks for blocks fields and blocks views.\nif ('undefined' !== typeof (wp.shortcake)) {\n\n  /**\n   * Attach shortcake hooks for block fields.\n   */\n  function attach_hooks() {\n\n    if (!p4_blocks.hooks_defined) {\n      p4_blocks.hooks_defined = true;\n      wp.shortcake.hooks.addAction('shortcake_newcovers.cover_type', p4_blocks.newcovers.type_of_cover_change_hook);\n      wp.shortcake.hooks.addAction('shortcake_newcovers.tags', p4_blocks.newcovers.tags_change_hook);\n      wp.shortcake.hooks.addAction('shortcake_newcovers.post_types', p4_blocks.newcovers.post_types_change_hook);\n      wp.shortcake.hooks.addAction('shortcake_newcovers.posts', p4_blocks.newcovers.posts_select_change_hook);\n\n      wp.shortcake.hooks.addAction('shortcake_articles.posts', p4_blocks.articles.posts_select_change_hook);\n      wp.shortcake.hooks.addAction('shortcake_articles.post_types', p4_blocks.articles.page_types_change_hook);\n      wp.shortcake.hooks.addAction('shortcake_articles.tags', p4_blocks.articles.page_types_change_hook);\n      wp.shortcake.hooks.addAction('shortcake_articles.read_more_link', p4_blocks.articles.read_more_change_hook);\n\n      wp.shortcake.hooks.addAction('shortcake_social_media.embed_type', p4_blocks.social_media.embed_type_change_hook);\n    }\n\n    // There may be multiple social media embeds on a page; fields need initializing separately for each one.\n    p4_blocks.social_media.initialize_fields();\n  }\n\n  // Attach hooks when rendering a new p4 block.\n  wp.shortcake.hooks.addAction('shortcode-ui.render_new', function (shortcode) {\n    attach_hooks();\n\n    var shortcode_tag = shortcode.get('shortcode_tag');\n    if ('shortcake_columns' === shortcode_tag) {\n      p4_blocks.columns.render_new(shortcode);\n    }\n\n    if ('shortcake_carousel_header' === shortcode_tag) {\n      p4_blocks.carousel_header.render_edit();\n    }\n  });\n\n  // Trigger hooks when shortcode renders an existing p4 block.\n  wp.shortcake.hooks.addAction('shortcode-ui.render_edit', function (shortcode) {\n    attach_hooks();\n\n    var shortcode_tag = shortcode.get('shortcode_tag');\n    var block_name = shortcode_tag.replace('shortcake_', '');\n    if (['shortcake_articles', 'shortcake_newcovers'].includes(shortcode_tag)) {\n\n      var requests = shortcode.get('ajax_requests');\n\n      if (null !== requests) {\n\n        // Block ui / shortcake block view until all fields are populated.\n        var $block_div = $('.shortcode-ui-edit-' + shortcode_tag);\n        $block_div.addClass('not-clickable');\n        $block_div.prev().prepend('<span class=\"spinner is-active\" id=\"bl_loader\"></span>' +\n          '<span id=\"bl_loading_span\">Populating block\\'s fields..</span>');\n        $block_div.animate({opacity: 0.5});\n\n        // Add a hook to unblock shortcake block's view when all ajax requests have been completed.\n        Promise.all(requests).then(function (values) {\n          $block_div.animate({opacity: 1});\n          $block_div.removeClass('not-clickable');\n          $('#bl_loader').removeClass('is-active');\n          $('#bl_loading_span').remove();\n          shortcode.unset('ajax_requests');\n          p4_blocks.initialize_view_fields(block_name);\n        });\n      }\n    }\n\n    if ('shortcake_columns' === shortcode_tag) {\n      p4_blocks.columns.render_edit(shortcode);\n    }\n\n    if ('shortcake_carousel_header' === shortcode_tag) {\n      p4_blocks.carousel_header.render_edit();\n    }\n  });\n}\n","/* global createCookie, readCookie */\nfunction setNoTrackCookie()\n{\n  if ($('#necessary_cookies').is(':checked') || $('#all_cookies').is(':checked')) {\n    // Remove the 'no_track' cookie, if user accept the cookies consent.\n    createCookie('no_track', 'true', -1);\n  } else {\n    // If user manually disables all trackings, set a 'no_track' cookie.\n    createCookie('no_track', 'true', 20*365);\n  }\n}\n\njQuery(document).ready(function () {\n\n  var cookie = readCookie('greenpeace');\n  if ('1' === cookie) {\n    $('#necessary_cookies').prop('checked', true);\n  } else if ('2' === cookie) {\n    $('#necessary_cookies').prop('checked', true);\n    $('#all_cookies').prop('checked', true);\n  }\n\n  // Add change event for necessary cookies checkbox.\n  $('#necessary_cookies').on('change', function () {\n    if ($('#necessary_cookies').is(':checked')) {\n      createCookie('greenpeace', '1', 365);\n\n      // the .cookie-notice element belongs to the P4 Master Theme\n      $('.cookie-notice').slideUp('slow');\n    } else {\n      $('#all_cookies').prop('checked', false);\n      createCookie('greenpeace', '0', -1);\n      $('.cookie-notice').show();\n    }\n    setNoTrackCookie();\n  });\n\n  // Add change event for all cookies checkbox.\n  $('#all_cookies').on('change', function () {\n    if ($('#all_cookies').is(':checked')) {\n      $('#necessary_cookies').prop('checked', true);\n      createCookie('greenpeace', '2', 365);\n      $('.cookie-notice').slideUp('slow');\n    } else {\n      if ($('#necessary_cookies').is(':checked')) {\n        createCookie('greenpeace', '1', 365);\n      } else {\n        createCookie('greenpeace', '0', -1);\n        $('.cookie-notice').show();\n      }\n    }\n    setNoTrackCookie();\n  });\n});","$(document).ready(function () {\n\t'use strict';\n\n\t// Parse submenu object passed to a variable from server-side.\n\tif ('undefined' === submenu || ! Array.isArray(submenu)) {\n\t\tsubmenu = [];\n\t}\n\n\tfor (var i = 0; i < submenu.length; i++) {\n\t\tvar menu = submenu[i];\n\n\t\tif ('undefined' === menu.id || 'undefined' === menu.type || 'undefined' === menu.link) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar type = menu.type;\n\n\t\t// Iterate over headings and create an anchor tag for this heading.\n\t\tif (menu.link) {\n\n\t\t\tvar $headings = $('body ' + type);\n\n\t\t\tfor (var j = 0; j < $headings.length; j++) {\n\t\t\t\tvar $heading = $($headings[j]);\n\t\t\t\tif ($heading.text() === menu.text) {\n\t\t\t\t\t$heading.prepend('<a id=\"' + menu.id + '\"></a>');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ('undefined' === menu.children || !Array.isArray(menu.children)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (var k = 0; k < menu.children.length; k++) {\n\t\t\tvar child = menu.children[k];\n\t\t\tvar child_type = child.type;\n\t\t\tvar $headings2 = $('body ' + child_type);\n\n\t\t\tfor (var l = 0; l < $headings2.length; l++) {\n\n\t\t\t\tvar $heading2 = $($headings2[l]);\n\t\t\t\tif ($heading2.text() === child.text) {\n\t\t\t\t\t$heading2.prepend('<a id=\"' + child.id + '\"></a>');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Add click event for submenu links.\n    $('.submenu-link').click(function (event) {\n        event.preventDefault();\n        var link = $.attr(this, 'href');\n        $('html, body').animate({\n            scrollTop: $(link).offset().top - 100\n        }, 2000, function () {\n\t\t\tvar position = $(window).scrollTop();\n\t\t\twindow.location.hash = link;\n\t\t\t$(window).scrollTop(position);\n\t\t});\n\n        return false;\n    });\n});","var editAttributeHeading = sui.views.editAttributeField.extend({\n\n\ttagName: \"span\",\n\tclassName: 'block-attribute-wrapper',\n\tevents: {\n\t\t'input  input': 'inputChanged',\n\t\t'input  textarea': 'inputChanged',\n\t\t'change select': 'inputChanged',\n\t\t'change input[type=\"radio\"]': 'inputChanged',\n\t\t'change input[type=\"checkbox\"]': 'inputChanged'\n\t},\n\tinputChanged: function (e) {\n\n\t\tvar $el;\n\n\t\tif (this.model.get('attr')) {\n\t\t\t$el = this.$el.find('[name=\"' + this.model.get('attr') + '\"]');\n\t\t}\n\n\t\tif ('radio' === this.model.attributes.type || 'p4_radio' === this.model.attributes.type) {\n\t\t\tthis.setValue($el.filter(':checked').first().val());\n\t\t} else if ('checkbox' === this.model.attributes.type || 'p4_checkbox' === this.model.attributes.type) {\n\t\t\tthis.setValue($el.is(':checked'));\n\t\t} else if ('range' === this.model.attributes.type) {\n\t\t\tvar rangeId = '#' + e.target.id + '_indicator';\n\t\t\tvar rangeValue = e.target.value;\n\t\t\tdocument.querySelector(rangeId).value = rangeValue;\n\t\t\tthis.setValue($el.val());\n\t\t} else {\n\t\t\tthis.setValue($el.val());\n\t\t}\n\n\t\tthis.triggerCallbacks();\n\t},\n\n\tsetValue: function (val) {\n\t\tthis.model.set('value', val);\n\t},\n\n\ttriggerCallbacks: function () {\n\n\t\tvar shortcodeName = this.shortcode.attributes.shortcode_tag,\n\t\t\tattributeName = this.model.get('attr'),\n\t\t\thookName = [shortcodeName, attributeName].join('.'),\n\t\t\tchanged = this.model.changed,\n\t\t\tcollection = _.flatten(_.values(this.views.parent.views._views)),\n\t\t\tshortcode = this.shortcode;\n\n\t\t/*\n\t\t * Action run when an attribute value changes on a shortcode\n\t\t *\n\t\t * Called as `{shortcodeName}.{attributeName}`.\n\t\t *\n\t\t * @param changed (object)\n\t\t *           The update, ie. { \"changed\": \"newValue\" }\n\t\t * @param viewModels (array)\n\t\t *           The collections of views (editAttributeFields)\n\t\t *                         which make up this shortcode UI form\n\t\t * @param shortcode (object)\n\t\t *           Reference to the shortcode model which this attribute belongs to.\n\t\t */\n\t\twp.shortcake.hooks.doAction(hookName, changed, collection, shortcode);\n\n\t}\n});\n\n\nsui.views.editAttributeHeading = editAttributeHeading;"]}